{"version":3,"sources":["shared/firebase.js","Card/ProgressGrid.js","Card/ToggleView.js","Card/SeeMore.js","Card/Goal.js","AddGoal.js","Card/ArchiveCard.js","Card/Invite.js","Toggle.js","GoalGrid.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","makeStyles","root","width","marginLeft","overflow","marginTop","display","bullet","margin","transform","title","fontSize","table","tableLayout","marginBottom","marginless","tableCont","progressFilled1","size","backgroundColor","border","progressFilled2","progressUnfilled","pos","ourSpecialBlue","padding","ourSpecialGreen","weekDays","borderBottom","paddingBottom","paddingTop","textAlign","useStyles","theme","toggleContainer","togglebutton","ToggleButtonsView","showView","setShowView","classes","Grid","container","spacing","item","sm","md","ToggleButtonGroup","value","exclusive","onChange","event","newShowView","aria-label","className","ToggleButton","toggleButton","form","flexDirection","align","yaxis","SeeMore","goal","buttonText","React","useState","open","setOpen","goalData","setGoalData","creatorName","setCreatorName","inviteeName","setInviteeName","handleClose","useEffect","tempData","users","Object","keys","j","length","entry","name","toString","uv","pv","push","setGoalUserNames","snap","val","split","dbUsers","on","error","alert","off","Fragment","Button","variant","color","style","onClick","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","float","DialogTitle","id","DialogContent","DialogContentText","description","startDate","duration","startdate","Date","deltatime","getTime","Math","floor","getDayOn","height","data","top","right","left","bottom","strokeDasharray","dataKey","offset","position","label","metric","angle","verticalAlign","type","stroke","activeDot","r","y","fill","x1","y1","x2","y2","stopColor","stopOpacity","fillOpacity","DialogActions","db","minWidth","boxShadow","onDays","update","justifyContent","shape1","opacity","shape2","shapeCircle","borderRadius","goalCircle","backCircle","Goal","user","progress","setProgress","setCheckedIn","createRef","circle1Ref","circle2Ref","circle1Left","setCircle1Left","circle1Top","setCircle1Top","circle1Radius","setCircle1Radius","circle2Left","setCircle2Left","circle2Top","setCircle2Top","circle2Radius","setCircle2Radius","goalCircleRef","goalCircleLeft","setGoalCircleLeft","goalCircleTop","setGoalCircleTop","goalCircleRadius","setGoalCircleRadius","backCircleLeft","setBackCircleLeft","backCircleTop","setBackCircleTop","backCircleRadius","setBackCircleRadius","fullCardRef","lastRemindDay","setLastRemindDay","console","log","undefined","child","set","getProgress","fullCardWidth","current","offsetWidth","goalRadius","offsetHeight","backRadius","getReminder","onDayNum","uid","groupMembers","creator","Badge","anchorOrigin","vertical","horizontal","badgeContent","invisible","confirmed","key","invitee","Card","CardContent","Typography","component","Table","TableBody","TableRow","TableCell","clsx","CardActions","deleted","rejected","TextField","target","defaultValue","parseInt","withStyles","input","palette","background","paper","transition","transitions","create","fontFamily","join","borderColor","InputBase","button","AddGoal","emailTouid","setTitle","setDescription","selectedDate","setSelectedDate","setMetric","minimum","setMinimum","setDuration","email","setEmail","goalType","setGoalType","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","direction","justify","startIcon","autoFocus","placeholder","inputProps","maxLength","FormControl","formControl","InputLabel","Select","labelId","Input","map","MenuItem","utils","DateFnsUtils","format","date","KeyboardButtonProps","temp","replace","dt","toLocaleString","timeZone","timeNow","JSON","stringify","myRef","newData","archivedCreator","archivedInvitee","0","lastRemindCreator","lastRemindInvitee","ArchiveCard","getMonth","getDate","getFullYear","marginRight","Invite","setCreatorNameCallback","Container","ToggleButtons","showGoals","setShowGoals","newShowGoals","gridcontainer","griditem","carditem","inviteitem","GoalGrid","goals","invites","gridView","unfinished","setUnfinished","pending","setPending","invitelist","setInvitelist","unfinished_temp","pending_temp","invitelist_temp","values","checkArchive","xs","Toggle","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","flexGrow","icons","Welcome","setGridView","count","window","location","reload","Tooltip","IconButton","displayName","signOut","SignIn","Banner","App","goalsJSON","setGoals","setInvite","setUser","setEmailTouid","onAuthStateChanged","handleData","goals_arr","invites_arr","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b3e903f0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD1GYAgBteBkLHKtmmXrvsqKFxoRr2O-R8\",\n    authDomain: \"work2gather-e8973.firebaseapp.com\",\n    databaseURL: \"https://work2gather-e8973.firebaseio.com\",\n    projectId: \"work2gather-e8973\",\n    storageBucket: \"work2gather-e8973.appspot.com\",\n    messagingSenderId: \"609218763867\",\n    appId: \"1:609218763867:web:b13aa86c4dba6b4793337e\"\n  };\n  \n  firebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport firebase from \"../shared/firebase\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { TextField } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"35%\",\n    marginLeft: \"10%\",\n    overflow: \"auto\",\n    marginTop: \"50px\",\n    display: \"inline-block\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  table: {\n    tableLayout: \"auto\",\n    width: \"99.9%\",\n    marginTop: \"0px\",\n    marginBottom: \"10px\",\n  },\n  marginless: {\n    margin: 0,\n  },\n  tableCont: {\n    width: \"300\",\n  },\n  progressFilled1: {\n    size: \"small\",\n    backgroundColor: \"#14ECF5\", //our own special blue\n    border: \"1px solid black\",\n  },\n  progressFilled2: {\n    size: \"small\",\n    backgroundColor: \"#14F58E\", //our own special green\n    border: \"1px solid black\",\n  },\n  progressUnfilled: {\n    size: \"small\",\n    border: \"1px solid black\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  ourSpecialBlue: {\n    backgroundColor: \"#14ECF5\", //our own special blue\n    padding: \"5px\",\n  },\n  ourSpecialGreen: {\n    backgroundColor: \"#14F58E\", //our own special red\n    padding: \"5px\",\n  },\n  weekDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n  },\n});\n\nconst ProgressGrid = ({goal}) => {\n  let classes = useStyles();\n  let user1Rows = [];\n  let user2Rows = [];\n  let user1Cells = [];\n  let user2Cells = [];\n\n  let i = 0;\n  for (i = 0; i < goal[\"duration\"] * 7; i++) {\n    if (user1Cells.length < 7) {\n      user1Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled1\n              : classes.progressUnfilled\n          }\n          key={i}\n        >\n        i\n        </TableCell>\n      );\n      user2Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled2\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n    } else {\n      user1Rows.push(<TableRow>{user1Cells}</TableRow>);\n      user1Cells = [];\n      user1Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled1\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n      user2Rows.push(<TableRow>{user2Cells}</TableRow>);\n      user2Cells = [];\n      user2Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled2\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n    }\n  }\n  user1Rows.push(<TableRow>{user1Cells}</TableRow>);\n  user2Rows.push(<TableRow>{user2Cells}</TableRow>);\n\n  let table = [];\n  let daysOfTheWeek = (\n    <TableRow>\n      <TableCell className={classes.weekDays}>SUN</TableCell>\n      <TableCell className={classes.weekDays}>MON</TableCell>\n      <TableCell className={classes.weekDays}>TUE</TableCell>\n      <TableCell className={classes.weekDays}>WED</TableCell>\n      <TableCell className={classes.weekDays}>THU</TableCell>\n      <TableCell className={classes.weekDays}>FRI</TableCell>\n      <TableCell className={classes.weekDays}>SAT</TableCell>\n    </TableRow>\n  );\n  for (let i = 0; i < user1Rows.length; i++) {\n    table.push(\n      <React.Fragment key={\"tablefragment\" + i}>\n        <Typography className={classes.marginless} variant=\"body2\">\n          {\"Week \" + (i + 1)}\n        </Typography>\n        <Table className={classes.table}>\n          <TableBody>\n            {daysOfTheWeek}\n            {user1Rows[i]}\n            {user2Rows[i]}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <TableContainer className={classes.table} aria-label=\"simple table\">\n      {table}\n    </TableContainer>\n  );\n};\n\nexport default ProgressGrid;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles((theme) => ({\n    toggleContainer: {\n        width:\"250px\"\n    },\n    togglebutton:{\n        width: \"100px\"\n    }\n}));\n\nconst ToggleButtonsView = ({ showView, setShowView }) => {\n    const handleShowView = (event, newShowView) => {\n        if (newShowView !== null) {\n            setShowView(newShowView);\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item sm={12} md={6}>\n                    <ToggleButtonGroup\n                        value={showView}\n                        exclusive\n                        onChange={handleShowView}\n                        aria-label=\"visualization\"\n                        className={classes.toggleContainer}\n                    >\n                        <ToggleButton value=\"BAR\" aria-label=\"centered\" className={classes.toggleButton}>\n                            <div className={classes.toggleButton}> Bar </div>\n                        </ToggleButton>\n                        <ToggleButton value=\"LINE\" aria-label=\"centered\" >\n                            <div className={classes.toggleButton}> Line </div>\n                        </ToggleButton>\n                        <ToggleButton value=\"AREA\" aria-label=\"centered\" className={classes.toggleButton}>\n                            <div className={classes.toggleButton}> Area </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ToggleButtonsView;","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressGrid from \"./ProgressGrid\";\nimport firebase from \"../shared/firebase\";\n\nimport {\n  AreaChart, Area, BarChart, Bar, LineChart, Label, ReferenceLine, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport ToggleButtonsView from './ToggleView';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n    align: 'right',\n  },\n  yaxis:{\n  \tpadding:'10px',\n  \ttextAlign: 'center'\n  },\n}));\n\nexport default function SeeMore({ goal, buttonText }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [goalData, setGoalData] = useState([]);\n  const [showView, setShowView] = React.useState('BAR');\n  const [creatorName, setCreatorName] = useState([]);\n  const [inviteeName, setInviteeName] = useState([]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    let tempData = []; \n    let users = Object.keys(goal[\"progress\"]);\n    for(let j = 0; j < goal[\"progress\"][users[0]].length; j++){\n      let entry = {\n        name: j.toString(), \n        uv: goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][j],\n        pv: goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][j],\n      }\n      tempData.push(entry); \n    }\n    setGoalData(tempData);\n  }, [goal]);\n\n  useEffect(() => {\n    const setGoalUserNames = (snap) => {\n      if (snap.val()) {\n        setCreatorName(\n          snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"].split(\" \")[0]\n        );\n        setInviteeName(\n          snap.val()[goal[\"groupMembers\"][\"invitee\"]][\"name\"].split(\" \")[0]\n        );\n      }\n    };\n\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setGoalUserNames, (error) => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setGoalUserNames);\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Button  \n            size=\"medium\" \n            variant=\"contained\" \n            color=\"primary\" \n            style={{width:\"150px\"}}\n            onClick={handleClickOpen}>\n            {buttonText ? buttonText : 'See More'}\n          </Button>\n        </div>\n        <div>\n        </div>\n      </div>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"md\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n        style={{overflow:\"scrollbar\"}}\n      >\n        <div>\n          <div style={{float:\"left\"}}>\n            <DialogTitle id=\"max-width-dialog-title\">{goal.title}</DialogTitle>\n          </div>\n          <div style={{float:\"right\", margin:\"10px\"}}>\n            <ToggleButtonsView showView={showView} setShowView={setShowView}/>\n          </div>\n        </div>\n        <DialogContent>\n          <div>\n            <div style={{float:'left'}}>\n              <DialogContentText>\n                {goal.description}\n                <br></br>\n                Started: {goal.startDate}\n                <br></br>\n                Days Left: {goal.duration * 7 - getDayOn()}\n                <br></br>\n              </DialogContentText>\n            </div>\n            <div style={{float: 'right'}}>\n              { (showView === \"LINE\") ?\n              <LineChart\n                width={500}\n                height={300}\n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n        \t\t    <XAxis dataKey=\"name\">\n        \t   \t\t  <Label value=\"Days\" offset={0} position=\"bottom\" />\n        \t  \t  </XAxis>  \t\t\t\n        \t  \t  <YAxis className={classes.yaxis} label={{ value: goal.metric, angle: -90, position: 'left'}} />\n                <Tooltip />\n        \t\t\t  <Legend verticalAlign=\"top\" height={36}/>\n                <Line name={creatorName} type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n               \t<Line name={inviteeName} type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\n               \t<ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </LineChart>\n              :\n              (showView === \"BAR\") ?\n              <BarChart \n                width={500} \n                height={300} \n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\">\n                  <Label value=\"Days\" offset={0} position=\"bottom\" />\n                </XAxis>\n                <YAxis className={classes.yaxis} label={{value: goal.metric, angle: -90, position: 'left'}}/>\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36}/>\n                <Bar name={creatorName} dataKey=\"uv\" fill=\"#8884d8\" />\n                <Bar name={inviteeName} dataKey=\"pv\" fill=\"#82ca9d\" />\n                <ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </BarChart>\n              :\n              <AreaChart \n                width={500} \n                height={300} \n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                  </linearGradient>\n                  <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <XAxis dataKey=\"name\">\n                  <Label value=\"Days\" offset={0} position=\"bottom\" />\n                </XAxis>\n                <YAxis className={classes.yaxis} label={{value: goal.metric, angle: -90, position: 'left'}}/>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36}/>\n                <Area name={creatorName} type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                <Area name={inviteeName} type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                <ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </AreaChart>}\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { TextField } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport clsx from 'clsx';\nimport Badge from '@material-ui/core/Badge';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SeeMore from \"./SeeMore\"\nimport firebase from \"../shared/firebase\";\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"auto\",\n    minWidth: \"35%\",\n    boxShadow: \"3px 3px 25px 2px rgba(0,0,0,0.5)\",\n    // marginLeft: \"5%\",\n    // marginRight: \"5%\",\n    // overflow: \"auto\",\n    // marginTop: \"50px\",\n    // display: \"inline-block\",\n    // border: \"1px solid black\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  table: {\n    tableLayout: \"auto\",\n    width: \"99.9%\",\n    marginTop: \"0px\",\n    marginBottom: \"10px\",\n  },\n  marginless: {\n    margin: 0,\n  },\n  tableCont: {\n    width: \"300\",\n  },\n  progressFilled1: {\n    size: \"small\",\n    backgroundColor: \"#14ECF5\", //our own special blue\n    border: \"1px solid black\",\n  },\n  progressFilled2: {\n    size: \"small\",\n    backgroundColor: \"#14F58E\", //our own special green\n    border: \"1px solid black\",\n  },\n  progressUnfilled: {\n    size: \"small\",\n    border: \"1px solid black\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  ourSpecialBlue: {\n    backgroundColor: \"#14ECF5\", //our own special blue\n    padding: \"5px\",\n  },\n  ourSpecialGreen: {\n    backgroundColor: \"#14F58E\", //our own special green\n    padding: \"5px\",\n  },\n  weekDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n    width: \"50px\",\n  },\n  onDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n    width: \"50px\",\n    backgroundColor: \"#14ECF5\",\n  },\n  update:{\n    display:\"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  shape1: {\n    backgroundColor: \"#14ECF5\",\n    opacity: 0.5,\n  },\n  shape2: {\n    backgroundColor: \"#14F58E\",\n    opacity: 0.5,\n  },\n  shapeCircle: {\n    borderRadius: \"50%\",\n  },\n  goalCircle: {\n    backgroundColor: \"white\",\n  },\n  backCircle: {\n    backgroundColor: \"black\",\n  },\n});\n\nconst Goal = ({ goal, user }) => {\n  const [progress, setProgress] = useState(0);\n  const [checkedIn, setCheckedIn] = useState(false);\n  \n  const [circle1Ref, setCircle1Ref] = useState(React.createRef());\n  const [circle2Ref, setCircle2Ref] = useState(React.createRef());\n  const [circle1Left, setCircle1Left] = useState(0);\n  const [circle1Top, setCircle1Top] = useState(0);\n  const [circle1Radius, setCircle1Radius] = useState(0);\n\n  const [circle2Left, setCircle2Left] = useState(0);\n  const [circle2Top, setCircle2Top] = useState(0);\n  const [circle2Radius, setCircle2Radius] = useState(0);\n\n  const [goalCircleRef, setGoalCircleRef] = useState(React.createRef());\n  const [goalCircleLeft, setGoalCircleLeft] = useState(0);\n  const [goalCircleTop, setGoalCircleTop] = useState(0);\n  const [goalCircleRadius, setGoalCircleRadius] = useState(0);\n\n  const [backCircleRef, setBackCircleRef] = useState(React.createRef());\n  const [backCircleLeft, setBackCircleLeft] = useState(0);\n  const [backCircleTop, setBackCircleTop] = useState(0);\n  const [backCircleRadius, setBackCircleRadius] = useState(0);\n\n  const [fullCardRef, setFullCardRef] = useState(React.createRef());\n\n  const [creatorName, setCreatorName] = useState(\"\");\n  const [inviteeName, setInviteeName] = useState(\"\");\n\n  const [lastRemindDay, setLastRemindDay] = useState(-1);\n  const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n\n    let users = Object.keys(goal[\"progress\"]);\n    for (let j = 0; j <= getDayOn(); j++) {\n      console.log(users[0])\n      console.log(users[1])\n      console.log(goal[\"progress\"][users[0]][j])\n      console.log(goal[\"progress\"][users[1]][j])\n      if (goal[\"progress\"][users[0]][j] == undefined) {\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[0])\n          .child(j)\n          .set(0);\n        //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[0]);\n      }\n      if (goal[\"progress\"][users[1]][j] == undefined) {\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[1])\n          .child(j)\n          .set(0);\n        //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[1]);\n      }\n    }\n\n    const setGoalUserNames = (snap) => {\n      if (snap.val()) {\n        setCreatorName(\n          snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"].split(\" \")[0]\n        );\n        setInviteeName(\n          snap.val()[goal[\"groupMembers\"][\"invitee\"]][\"name\"].split(\" \")[0]\n        );\n      }\n    };\n\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setGoalUserNames, (error) => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setGoalUserNames);\n    };\n  }, []);\n\n  useEffect(() => {\n    setProgress(getProgress);\n\n    const fullCardWidth = fullCardRef.current.offsetWidth;\n    const fullCardHeight = fullCardRef.current.offsetHeight;\n\n    const goalRadius = fullCardWidth * 0.3;\n    const backRadius = fullCardWidth * 0.31;\n\n    setBackCircleRadius(backRadius);\n    setBackCircleTop(0);\n    setBackCircleLeft(fullCardWidth / 2 - backRadius / 2);\n\n    setGoalCircleRadius(goalRadius);\n    setGoalCircleTop(0 - goalRadius / 2 + backRadius / 2);\n    setGoalCircleLeft(fullCardWidth / 2 - goalRadius / 2);\n\n    const circle1Radius =\n      fullCardWidth *\n      0.3 *\n      (goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][getDayOn()] /\n        goal[\"minimum\"]);\n    setCircle1Radius(circle1Radius);\n    setCircle1Left(fullCardWidth / 2 - circle1Radius / 2);\n    setCircle1Top(0 - circle1Radius / 2 + backRadius / 2);\n\n    const circle2Radius =\n      fullCardWidth *\n      0.3 *\n      (goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][getDayOn()] /\n        goal[\"minimum\"]);\n    setCircle2Radius(circle2Radius);\n    setCircle2Left(fullCardWidth / 2 - circle2Radius / 2);\n    setCircle2Top(0 - circle2Radius / 2 + backRadius / 2);\n\n    //  Reminder Notifications\n    setLastRemindDay(getReminder(user.id));\n  }, [goal]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const getProgress = () => {\n    const onDayNum = getDayOn();\n    const checkedIn = goal[\"progress\"][user.uid][onDayNum];\n    return checkedIn;\n  };\n\n  const saveProgress = (event, value) => {\n    setProgress(event.target.value);\n  };\n\n  const updateProgress = (event, value) => {\n    const onDayNum = getDayOn();\n    if (progress === \"\") {\n      alert(\"Not a number\");\n    } else {\n      if (goal['goalType'] == 'Quantitative'){\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(user.uid)\n          .child(onDayNum)\n          .set(parseInt(progress));\n        setCheckedIn(true);\n      } else {\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(user.uid)\n          .child(onDayNum)\n          .set(1);\n        setCheckedIn(true);\n      }\n    }\n  };\n\n  const handleSliderChange = (e, newValue) => {\n    const onDayNum = getDayOn();\n    db.child(\"goals\")\n      .child(goal[\"key\"])\n      .child(\"progress\")\n      .child(user.uid)\n      .child(onDayNum)\n      .set(newValue);\n  };\n\n  const setReminder = () => {\n    alert(\"You have reminded your friend!\");\n    const onDayNum = getDayOn();\n    if (user.uid === goal.groupMembers.creator) {\n      db.child(\"goals\")\n        .child(goal[\"key\"])\n        .child(\"lastRemindInvitee\")\n        .set(onDayNum);\n    } else {\n      db.child(\"goals\")\n        .child(goal[\"key\"])\n        .child(\"lastRemindCreator\")\n        .set(onDayNum);\n    }\n  };\n\n  const getReminder = () => {\n    const onDayNum = getDayOn();\n    if (user.uid === goal.groupMembers.creator) {\n      return goal[\"lastRemindCreator\"];\n    } else {\n      return goal[\"lastRemindInvitee\"];\n    }\n  };\n\n  const deleteGoal = () => {\n    if(user.uid===goal.groupMembers.creator) {\n      db.child('users').child(goal.groupMembers.creator).child('goals').child(goal.key).set(null);\n      db.child('goals').child(goal.key).child('deleted').set(true);\n    }\n    else {\n      db.child('users').child(goal.groupMembers.invitee).child('invites').child(goal.key).set(null);\n      db.child('goals').child(goal.key).child('deleted').set(true);\n    }\n    // db.child('goals').child(goal.key).set(null);\n  }\n\n  const archiveGoal = () => {\n    if(user.uid===goal.groupMembers.creator) {\n      db.child('goals').child(goal.key).child('archivedCreator').set(true);\n    }\n    else {\n      db.child('goals').child(goal.key).child('archivedInvitee').set(true);\n    }\n    setOpen(false);\n    // db.child('goals').child(goal.key).set(null);\n  }\n\n  return (\n    <Badge\n      anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n      color=\"secondary\"\n      badgeContent={<NotificationsIcon fontSize=\"small\" />}\n      invisible={\n        !(\n          getDayOn() === lastRemindDay &&\n          goal[\"progress\"][user.uid][getDayOn()] < goal[\"minimum\"]\n        )\n      }\n    >\n      <Badge \n      badgeContent={<ClearIcon onClick={()=>setOpen(true)}/>} \n      color=\"primary\"\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      >\n        <Dialog open={open} onClose={()=>setOpen(false)}>\n          <DialogContent>\n            Are you sure you want to archive or delete this goal?\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={()=>setOpen(false)}>Cancel</Button>\n            {goal.confirmed? <Button onClick={archiveGoal}>Archive</Button> : null}\n            <Button onClick={deleteGoal}>Delete</Button>\n          </DialogActions>\n        </Dialog>\n        <Card className={classes.root}>\n          <CardContent>\n            <div style={{ width: \"80%\", display: \"inline-block\" }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                {goal[\"title\"]}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                <br></br>\n                Started: {goal[\"startDate\"]}\n                <br></br>\n                Days Left: {goal[\"duration\"] * 7 - getDayOn()}  \n                <br></br>\n              </Typography>\n            </div>\n            <div\n              style={{ width: \"20%\", display: \"inline-block\", float: \"right\" }}\n            >\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell className={classes.ourSpecialBlue}>\n                      {\" \"}\n                      {creatorName}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell className={classes.ourSpecialGreen}>\n                      {\" \"}\n                      {inviteeName}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </div>\n            <div\n              ref={fullCardRef}\n              style={{\n                position: \"relative\",\n                height: backCircleRadius * 1.05,\n                width: \"100%\",\n              }}\n            >\n              <div\n                style={{\n                  overflow: \"visible\",\n                  position: \"absolute\",\n                  left: backCircleLeft,\n                  top: backCircleTop,\n                  width: backCircleRadius,\n                  height: backCircleRadius,\n                }}\n                className={clsx(classes.backCircle, classes.shapeCircle)}\n              />\n              <div\n                ref={goalCircleRef}\n                style={{\n                  overflow: \"visible\",\n                  position: \"absolute\",\n                  left: goalCircleLeft,\n                  top: goalCircleTop,\n                  width: goalCircleRadius,\n                  height: goalCircleRadius,\n                }}\n                className={clsx(classes.goalCircle, classes.shapeCircle)}\n              />\n              <div\n                ref={circle1Ref}\n                style={{\n                  overflow: \"visible\",\n                  position: \"absolute\",\n                  left: circle1Left,\n                  top: circle1Top,\n                  width: circle1Radius,\n                  height: circle1Radius,\n                }}\n                className={clsx(classes.shape1, classes.shapeCircle)}\n              />\n              <div\n                ref={circle2Ref}\n                style={{\n                  overflow: \"visible\",\n                  position: \"absolute\",\n                  left: circle2Left,\n                  top: circle2Top,\n                  width: circle2Radius,\n                  height: circle2Radius,\n                }}\n                className={clsx(classes.shape2, classes.shapeCircle)}\n              />\n            </div>\n\n            <CardActions className={classes.update}>\n              <Typography>\n                <b>Day {getDayOn()} </b>\n              </Typography>\n              {(goal.deleted||goal.rejected)?<Typography>{goal.rejected? \"Your friend has rejected the goal invite.\" :\"Your friend has removed the goal.\"}</Typography>:<div style={{height:'23px'}}></div>}\n              <Typography >\n                Daily Goal: {goal[\"minimum\"]} {goal[\"metric\"]}\n              </Typography>\n              {goal[\"goalType\"] === \"Quantitative\" ? \n              <TextField\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={saveProgress}\n                defaultValue={progress}\n                size=\"small\"\n                style={{ width: \"176px\" }}\n              /> : <div style={{height:'40px'}}></div> }\n              <Button\n                size=\"medium\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginTop: \"10px\" }}\n                onClick={updateProgress}\n              >\n                 {goal[\"goalType\"] === \"Quantitative\" ? 'Update Progress' : 'Mark Complete' } \n              </Button>\n            </CardActions>\n\n            <CardActions style={{marginBottom:'-15px'}}>\n              <Button\n                size=\"medium\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={setReminder}\n                style={{width:\"56%\"}}\n              >\n                Remind Friend\n              </Button>\n              <SeeMore goal={goal}/>\n            </CardActions>\n            {/* <div style={{ marginTop:\"5px\", marginBottom:\"30px\"}}>\n              <div style={{float:\"left\", marginRight: \"10px\"}}>\n                <Button\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={setReminder}\n                  >\n                  Remind Friend\n                </Button>\n              </div>\n              <div style={{float:\"right\"}}>\n                <SeeMore goal={goal} />\n              </div>\n            </div> */}\n          </CardContent>\n        </Card>\n      </Badge>\n    </Badge>\n  );\n};\n\nexport default Goal;\n","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n  import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport firebase from \"./shared/firebase\";\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: 5,\n  },\n}));\n\nconst AddGoal = ({ open, user, setOpen, emailTouid }) => {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [metric, setMetric] = useState();\n  const [minimum, setMinimum] = useState();\n  const [duration, setDuration] = useState();\n  const [email, setEmail] = useState();\n  const [goalType, setGoalType] = useState(\"\");\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle();\n    setSelectedDate(new Date());\n    setMetric();\n    setMinimum();\n    setDuration();\n    setGoalType('');\n    setEmail();\n  };\n\n  const handleSubmit = () => {\n    //console.log(title);\n    //console.log(description);\n    //console.log(metric);\n    //console.log(minimum);\n    //console.log(duration);\n    if (\n      title === undefined ||\n      description === undefined ||\n      metric === undefined ||\n      (minimum === undefined && goalType === \"Quantitative\") ||\n      duration === undefined ||\n      email === undefined ||\n      title === \"\" ||\n      description === \"\" ||\n      metric === \"\" ||\n      (minimum === \"\" && goalType === \"Quantitative\") ||\n      duration === \"\" ||\n      email === \"\" || \n      goalType == \"\"\n    ) {\n      alert(\"Please fill in all fields.\");\n    } else {\n      \n      let rg = /\\./g;\n      let temp = email.replace(rg, \",\");\n      if (!emailTouid[temp]) {\n        alert(\"The user does not exist. Please try again.\");\n      } else {\n        alert(\"Success! New Goal Created!\");\n        var dt = selectedDate.toLocaleString(\"en-US\", {\n          timeZone: \"America/Chicago\",\n        });\n        var myJSON = JSON.stringify(dt);\n        var timeNow = myJSON.split('\"')[1].split(\",\")[0];\n        var myRef = db.child(\"goals\").push();\n        var key = myRef.key;\n\n        var newData = {\n          deleted: false,\n          rejected: false, \n          confirmed: false,\n          archivedCreator: false, \n          archivedInvitee: false, \n          key: key,\n          title: title,\n          description: description,\n          startDate: timeNow,\n          duration: duration,\n          goalType: goalType,\n          groupMembers: {\n            creator: user.uid,\n            invitee: emailTouid[temp],\n          },\n          minimum: goalType === \"Quantitative\" ? minimum : \"1\",\n          metric: metric,\n          progress: {\n            [user.uid]: {\n              0: 0,\n            },\n            [emailTouid[temp]]: {\n              0: 0,\n            },\n          },\n          lastRemindCreator: -1,\n          lastRemindInvitee: -1,\n        };\n\n        myRef.update(newData);\n\n        //add goals to creator\n        db.child(\"users\").child(user.uid).child(\"goals\").child(key).set(key);\n\n        //add goal to invitee\n        db.child(\"users\").child(emailTouid[temp]).child(\"invites\").child(key).set(key);\n        \n        handleClose();\n      }\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddCircleIcon fontSize=\"large\" />}\n            size=\"large\"\n            onClick={handleOpen}\n          >\n            Add a new goal\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Create a new goal</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Goal Title\"\n            fullWidth\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"What's your goal focus? (e.g. Reading, Meditation, Daily Pushups)\"\n            inputProps={{maxLength: 15}}\n          />\n          {/* Goal Description Added to SeeMore? */}\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Description\"\n            fullWidth\n            onChange={(event) => setDescription(event.target.value)}\n            placeholder=\"What will you do every day to reach your goal? Set S.M.A.R.T goals!\"\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Metric\"\n            fullWidth\n            onChange={(event) => setMetric(event.target.value)}\n            placeholder=\"What unit will you measure everyday? (e.g. pushups done, minutes spent)\"\n          />\n          <FormControl className={classes.formControl} style={{width:'100%'}}>\n            <InputLabel id=\"demo-mutiple-name-label\">Goal Type</InputLabel>\n            <Select \n\n              labelId=\"demo-mutiple-name-label\"\n              id=\"demo-mutiple-name\"\n              value={goalType}\n              style={{width:'100%'}}\n              onChange={(event) => setGoalType(event.target.value)}\n              input={<Input style={{width:'100%'}}/>}\n              MenuProps={MenuProps}\n            >\n              {['Quantitative', 'Qualitative'].map(name => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          { goalType === 'Qualitative' ? <React.Fragment></React.Fragment> :\n          <TextField\n            margin=\"dense\"\n            label=\"Daily Minimum\"\n            fullWidth\n            onChange={(event) => setMinimum(event.target.value)}\n            placeholder=\"How much do you need to do to complete your daily goal? (e.g. 10)\"\n            type=\"number\"\n          /> }\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Duration\"\n            fullWidth\n            onChange={(event) => setDuration(event.target.value)}\n            placeholder=\"How many weeks will you work on your goal?(e.g. 2)\"\n            type=\"number\"\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              label=\"Goal Start Date\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              fullWidth\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <TextField\n            margin=\"dense\"\n            label=\"Invite Your Friend\"\n            fullWidth\n            onChange={(event) => setEmail(event.target.value)}\n            placeholder=\"Who do you want to work with? Please provide your friend's email address.\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AddGoal;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { TextField } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport clsx from 'clsx';\nimport Badge from '@material-ui/core/Badge';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SeeMore from \"./SeeMore\"\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport firebase from \"../shared/firebase\";\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"auto\",\n    minWidth: \"35%\",\n    boxShadow: \"3px 3px 25px 2px rgba(0,0,0,0.5)\",\n    // marginLeft: \"5%\",\n    // marginRight: \"5%\",\n    // overflow: \"auto\",\n    // marginTop: \"50px\",\n    // display: \"inline-block\",\n    // border: \"1px solid black\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  table: {\n    tableLayout: \"auto\",\n    width: \"99.9%\",\n    marginTop: \"0px\",\n    marginBottom: \"10px\",\n  },\n  marginless: {\n    margin: 0,\n  },\n  tableCont: {\n    width: \"300\",\n  },\n  progressFilled1: {\n    size: \"small\",\n    backgroundColor: \"#14ECF5\", //our own special blue\n    border: \"1px solid black\",\n  },\n  progressFilled2: {\n    size: \"small\",\n    backgroundColor: \"#14F58E\", //our own special green\n    border: \"1px solid black\",\n  },\n  progressUnfilled: {\n    size: \"small\",\n    border: \"1px solid black\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  ourSpecialBlue: {\n    backgroundColor: \"#14ECF5\", //our own special blue\n    padding: \"5px\",\n  },\n  ourSpecialGreen: {\n    backgroundColor: \"#14F58E\", //our own special green\n    padding: \"5px\",\n  },\n  weekDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n    width: \"50px\",\n  },\n  onDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n    width: \"50px\",\n    backgroundColor: \"#14ECF5\",\n  },\n  shape1: {\n    backgroundColor: \"#14ECF5\",\n    opacity: 0.5,\n  },\n  shape2: {\n    backgroundColor: \"#14F58E\",\n    opacity: 0.5,\n  },\n  shapeCircle: {\n    borderRadius: \"50%\",\n  },\n  goalCircle: {\n    backgroundColor: \"white\",\n  },\n  backCircle: {\n    backgroundColor: \"black\",\n  },\n});\n\nconst ArchiveCard = ({ goal, user }) => {\n  const [progress, setProgress] = useState(0);\n  const [checkedIn, setCheckedIn] = useState(false);\n  \n  const [circle1Ref, setCircle1Ref] = useState(React.createRef());\n  const [circle2Ref, setCircle2Ref] = useState(React.createRef());\n  const [circle1Left, setCircle1Left] = useState(0);\n  const [circle1Top, setCircle1Top] = useState(0);\n  const [circle1Radius, setCircle1Radius] = useState(0);\n\n  const [circle2Left, setCircle2Left] = useState(0);\n  const [circle2Top, setCircle2Top] = useState(0);\n  const [circle2Radius, setCircle2Radius] = useState(0);\n\n  const [goalCircleRef, setGoalCircleRef] = useState(React.createRef());\n  const [goalCircleLeft, setGoalCircleLeft] = useState(0);\n  const [goalCircleTop, setGoalCircleTop] = useState(0);\n  const [goalCircleRadius, setGoalCircleRadius] = useState(0);\n\n  const [backCircleRef, setBackCircleRef] = useState(React.createRef());\n  const [backCircleLeft, setBackCircleLeft] = useState(0);\n  const [backCircleTop, setBackCircleTop] = useState(0);\n  const [backCircleRadius, setBackCircleRadius] = useState(0);\n\n  const [fullCardRef, setFullCardRef] = useState(React.createRef());\n\n  const [creatorName, setCreatorName] = useState(\"\");\n  const [inviteeName, setInviteeName] = useState(\"\");\n\n  const [lastRemindDay, setLastRemindDay] = useState(-1);\n  const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const setGoalUserNames = (snap) => {\n      if (snap.val()) {\n        setCreatorName(\n          snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"].split(\" \")[0]\n        );\n        setInviteeName(\n          snap.val()[goal[\"groupMembers\"][\"invitee\"]][\"name\"].split(\" \")[0]\n        );\n      }\n    };\n\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setGoalUserNames, (error) => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setGoalUserNames);\n    };\n\n    let users = Object.keys(goal[\"progress\"]);\n    for (let j = 0; j <= getDayOn(); j++) {\n      if (goal[\"progress\"][users[0]][j] == undefined) {\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[0])\n          .child(j)\n          .set(0);\n        //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[0]);\n      }\n      if (goal[\"progress\"][users[1]][j] == undefined) {\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[1])\n          .child(j)\n          .set(0);\n        //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[1]);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setProgress(getProgress);\n  }, [goal]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const getProgress = () => {\n    const onDayNum = getDayOn();\n    const checkedIn = goal[\"progress\"][user.uid][onDayNum];\n    return checkedIn;\n  };\n\n  const saveProgress = (event, value) => {\n    setProgress(event.target.value);\n  };\n\n  const updateProgress = (event, value) => {\n    const onDayNum = getDayOn();\n    if (progress === \"\") {\n      alert(\"Not a number\");\n    } else {\n      db.child(\"goals\")\n        .child(goal[\"key\"])\n        .child(\"progress\")\n        .child(user.uid)\n        .child(onDayNum)\n        .set(parseInt(progress));\n      setCheckedIn(true);\n    }\n  };\n\n  const handleSliderChange = (e, newValue) => {\n    const onDayNum = getDayOn();\n    db.child(\"goals\")\n      .child(goal[\"key\"])\n      .child(\"progress\")\n      .child(user.uid)\n      .child(onDayNum)\n      .set(newValue);\n  };\n\n  const setReminder = () => {\n    alert(\"You have reminded your friend!\");\n    const onDayNum = getDayOn();\n    if (user.uid === goal.groupMembers.creator) {\n      db.child(\"goals\")\n        .child(goal[\"key\"])\n        .child(\"lastRemindInvitee\")\n        .set(onDayNum);\n    } else {\n      db.child(\"goals\")\n        .child(goal[\"key\"])\n        .child(\"lastRemindCreator\")\n        .set(onDayNum);\n    }\n  };\n\n  const getReminder = () => {\n    const onDayNum = getDayOn();\n    if (user.uid === goal.groupMembers.creator) {\n      return goal[\"lastRemindCreator\"];\n    } else {\n      return goal[\"lastRemindInvitee\"];\n    }\n  };\n\n  const deleteGoal = () => {\n    if(user.uid===goal.groupMembers.creator) {\n      db.child('users').child(goal.groupMembers.creator).child('goals').child(goal.key).set(null);\n      db.child('goals').child(goal.key).child('deleted').set(true);\n    }\n    else {\n      db.child('users').child(goal.groupMembers.invitee).child('invites').child(goal.key).set(null);\n      db.child('goals').child(goal.key).child('deleted').set(true);\n    }\n    // db.child('goals').child(goal.key).set(null);\n  }\n\n  const archiveGoal = () => {\n    if(user.uid===goal.groupMembers.creator) {\n      db.child('goals').child(goal.key).child('archivedCreator').set(true);\n    }\n    else {\n      db.child('goals').child(goal.key).child('archivedInvitee').set(true);\n    }\n    setOpen(false);\n    // db.child('goals').child(goal.key).set(null);\n  }\n\n  return (\n    <Badge\n      anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n      color=\"secondary\"\n      badgeContent={<NotificationsIcon fontSize=\"small\" />}\n      invisible={\n        !(\n          getDayOn() === lastRemindDay &&\n          goal[\"progress\"][user.uid][getDayOn()] < goal[\"minimum\"]\n        )\n      }\n    >\n      <Badge \n      badgeContent={<ClearIcon onClick={()=>setOpen(true)}/>} \n      color=\"primary\"\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      >\n        <Dialog open={open} onClose={()=>setOpen(false)}>\n          <DialogContent>\n            Are you sure you want to delete this goal?\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={()=>setOpen(false)}>Cancel</Button>\n            {goal.confirmed? <Button onClick={archiveGoal}>Archive</Button> : null}\n            <Button onClick={deleteGoal}>Delete</Button>\n          </DialogActions>\n        </Dialog>\n        <Card className={classes.root}>\n          <CardContent>\n            <div style={{ width: \"80%\", display: \"inline-block\" }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                {goal[\"title\"]}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                <br></br>\n                <br></br>\n                Started: {goal[\"startDate\"]}\n                <br></br>\n                Duration: {goal[\"duration\"] + ' Weeks'}  \n                <br></br>\n                Ended: {new Date(new Date(goal[\"startDate\"]).getTime() + goal[\"duration\"] * 7 * 24 * 60 * 60 * 1000).getMonth() + 1 + \"/\" + new Date(new Date(goal[\"startDate\"]).getTime() + goal[\"duration\"] * 7 * 24 * 60 * 60 * 1000).getDate() + \"/\" + new Date(new Date(goal[\"startDate\"]).getTime() + goal[\"duration\"] * 7 * 24 * 60 * 60 * 1000).getFullYear()}\n                \n              </Typography>\n            </div>\n            <div\n              style={{ width: \"20%\", display: \"inline-block\", float: \"right\" }}\n            >\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell className={classes.ourSpecialBlue}>\n                      {\" \"}\n                      {creatorName}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell className={classes.ourSpecialGreen}>\n                      {\" \"}\n                      {inviteeName}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </div>\n            <div style={{textAlign:'center', display:'inline-block', width:'100%'}}><div style={{textAlign:'center'}}>\n            <CheckCircleIcon style={{fontSize:100, color: '#14F58E', marginLeft:'auto', marginRight:'auto'}}/>\n            </div></div>\n            <br></br>\n            \n\n            {/* <Slider\n            style={{ width: \"95%\", marginLeft: \"2%\", float: \"center\" }}\n            defaultValue={5}\n            getAriaValueText={(value) => value}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            onChange={handleSliderChange}\n            marks\n            min={0}\n            max={15}\n            /> */}\n\n            <div style={{textAlign:'center', display:'inline-block', width:'100%'}}><div style={{textAlign:'center'}}>            \n                <SeeMore buttonText={'Review Goal'} goal={goal} />\n              </div>\n              </div>\n          </CardContent>\n        </Card>\n      </Badge>\n    </Badge>\n  );\n};\n\nexport default ArchiveCard;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../shared/firebase\";\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles({\n  root: {\n    width:\"280px\",\n    boxShadow: \"3px 3px 25px 2px rgba(0,0,0,0.5)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  }\n});\n\nconst Invite = ({ goal, user }) => {\n  const [progress, setProgress] = useState(0);\n  const [creatorName, setCreatorName] = useState('');\n\n  const classes = useStyles();\n  \n  useEffect(() => {\n    let users = Object.keys(goal[\"progress\"]);\n    for(let j = 0; j <= getDayOn(); j++){\n      if(goal[\"progress\"][users[0]][j] == undefined){\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[0])\n          .child(j)\n          .set(0);\n          //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[0])\n      }\n      if(goal[\"progress\"][users[1]][j] == undefined){\n        db.child(\"goals\")\n          .child(goal[\"key\"])\n          .child(\"progress\")\n          .child(users[1])\n          .child(j)\n          .set(0);\n          //console.log(\"updating db for goal \" + goal.key + \" for user \" + users[1])\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setProgress(getProgress);\n  }, [goal]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const getProgress = () => {\n    const onDayNum = getDayOn();\n    const checkedIn = goal[\"progress\"][user.uid][onDayNum];\n    return checkedIn;\n  };\n\n  const accept = () => {\n    db.child(\"goals\").child(goal[\"key\"]).child(\"confirmed\").set(true);\n    alert(\"accept!\");\n  };\n\n  const reject = () => {\n    //delete goals\n    db.child(\"goals\").child(goal[\"key\"]).child(\"confirmed\").set(true);\n    db.child(\"users\").child(goal[\"groupMembers\"][\"invitee\"]).child(\"invites\").child(goal[\"key\"]).set(null);\n    db.child(\"goals\").child(goal[\"key\"]).child(\"rejected\").set(true);\n    alert(\"reject!\");\n  };\n\n  useEffect(() => {\n    const setCreatorNameCallback = (snap) => {\n      if (snap.val()) {\n        setCreatorName(\n          snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"]\n        )\n      }\n    };\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setCreatorNameCallback, (error) => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setCreatorNameCallback);\n    };\n  }, []);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <div style={{display: \"inline-block\" }}>\n          <Typography variant=\"h5\" component=\"h2\">\n            {goal[\"title\"]}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            <br></br>\n            Invite From: {creatorName}\n            <br></br>\n            Start Date: {goal[\"startDate\"]}\n            <br></br>\n            Duration: {goal[\"duration\"]} Weeks\n            <br></br>\n            Daily Goal: {goal[\"minimum\"]} {goal[\"metric\"]}\n          </Typography>\n        </div>\n        <Container style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"inline-block\"}}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{float: \"left\", marginBottom: \"10px\" }}\n            onClick={accept}\n          >\n            Accept\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{float: \"right\", marginBottom: \"10px\"}}\n            onClick={reject}\n          >\n            Reject\n          </Button>\n        </Container>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Invite;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles((theme) => ({\n    toggleContainer: {\n        width:\"250px\"\n    },\n    togglebutton:{\n        width: \"100px\"\n    }\n}));\n\nconst ToggleButtons = ({ showGoals, setShowGoals }) => {\n    const handleShowGoals = (event, newShowGoals) => {\n        if (newShowGoals !== null) {\n            setShowGoals(newShowGoals);\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item sm={12} md={6}>\n                    <ToggleButtonGroup\n                        value={showGoals}\n                        exclusive\n                        onChange={handleShowGoals}\n                        aria-label=\"text alignment\"\n                        className={classes.toggleContainer}\n                    >\n                        <ToggleButton value=\"ALL\" aria-label=\"centered\" >\n                            <div className={classes.toggleButton}> Show All </div>\n                        </ToggleButton>\n                        <ToggleButton value=\"TODO\" aria-label=\"centered\" className={classes.toggleButton}>\n                            <div className={classes.toggleButton}> Show To-Do </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ToggleButtons","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Goal from './Card/Goal'\nimport ArchiveCard from './Card/ArchiveCard'\nimport Invite from './Card/Invite'\nimport ToggleButtons from './Toggle'\n\nconst useStyles = makeStyles((theme) => ({\n  gridcontainer: {\n    marginTop: \"5px\"\n  },\n  griditem: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  carditem: {\n    marginLeft: \"25px\",\n    marginRight: \"25px\"\n  },\n  inviteitem: {\n  }\n}));\n\n\nconst GoalGrid = ({ goals, invites, user, gridView}) => {\n  let classes = useStyles();\n  const [unfinished, setUnfinished] = useState([]);\n  const [pending, setPending] = useState([]);\n  const [invitelist, setInvitelist] = useState([]);\n  const [showGoals, setShowGoals] = React.useState('ALL');\n\n  const getDayOn = (goal) => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  useEffect(() => {\n    let unfinished_temp = [];\n    let pending_temp = [];\n    let invitelist_temp = [];\n\n    Object.values(goals).map(goal => goal.confirmed ? unfinished_temp.push(goal) : pending_temp.push(goal));\n    Object.values(invites).map(goal => goal.confirmed ? unfinished_temp.push(goal) : invitelist_temp.push(goal));\n\n    setUnfinished(unfinished_temp);\n    setPending(pending_temp);\n    setInvitelist(invitelist_temp);\n  }, [goals]);\n\n  const checkArchive = (uid, goal) =>{\n    if (uid === goal[\"groupMembers\"][\"creator\"]){\n      return goal.archivedCreator\n    }\n    else{\n      return goal.archivedInvitee\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {(gridView === \"ACTIVE\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          \n          <Grid item xs={12} className={classes.griditem}>\n            <div>\n              <div style={{ float: 'left' }}><Typography variant=\"h4\">Active Goals</Typography></div>\n              <div style={{ float: 'right' }}>{user ? <ToggleButtons showGoals={showGoals} setShowGoals={setShowGoals}></ToggleButtons> : null}</div></div>\n          </Grid>\n\n          {(showGoals === 'ALL') ? \n            unfinished.map(goals => (!checkArchive(user.uid, goals)) ?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n            : \n            unfinished.map(goals => (!checkArchive(user.uid, goals) && (goals['progress'][user.uid][getDayOn(goals)] < goals['minimum'])) ?\n              <Grid item className={classes.carditem} >\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n          }\n        </Grid>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Pending Goals</Typography></Grid>\n            {pending.map(goals => (!checkArchive(user.uid, goals))?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null)\n            }\n        </Grid>\n      </React.Fragment>\n      : \n\n      (gridView === \"INVITES\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={10} className={classes.griditem}><Typography variant=\"h4\">New Invites</Typography></Grid>\n          {invitelist.map(goals =>\n            <Grid item className={classes.carditem}>\n              <Invite goal={goals} user={user} key={goals.key} />\n            </Grid>\n          )}\n        </Grid>\n      </React.Fragment>\n      : \n      <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Archive</Typography></Grid>\n          {unfinished.map(goals => checkArchive(user.uid, goals) ?\n            <Grid item className={classes.carditem}>\n              <ArchiveCard goal={goals} user={user} key={goals.key} />\n            </Grid> : null)\n          }\n      </Grid>}\n\n    </React.Fragment >\n  );\n};\n\nexport default GoalGrid;","import React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Goal from './Card/Goal'\nimport AddGoal from './AddGoal';\nimport GoalGrid from './GoalGrid';\nimport firebase from './shared/firebase'\nimport ToggleButtons from './Toggle'\nimport Badge from '@material-ui/core/Badge'; \nimport MailIcon from '@material-ui/icons/Mail'; \nimport HomeIcon from '@material-ui/icons/Home'; \nimport ArchiveIcon from '@material-ui/icons/Archive'; \nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst db = firebase.database().ref();\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  icons:{\n    margin:\"5px\",\n    color: \"white\"\n  }\n}));\n\nconst Welcome = ({ user, invites, setGridView}) => {\n  const classes = useStyles();\n  let count = 0;\n  Object.values(invites).map(goal=>goal.confirmed?null:count++);\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title} onClick={() => {window.location.reload(false)}}>\n            Work2Gather\n          </Typography>\n          <Tooltip title=\"Home\">\n            <IconButton onClick={() => setGridView(\"ACTIVE\")}>\n              <HomeIcon className={classes.icons} />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Invites\">\n            <IconButton onClick={() => setGridView(\"INVITES\")}>\n              <Badge \n                anchorOrigin={{\n                   vertical: 'top',\n                  horizontal: 'left',\n                }} \n                badgeContent={count} \n                color=\"secondary\"\n                className={classes.icons}>\n                <MailIcon />\n              </Badge>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Archive\">\n            <IconButton  onClick={() => setGridView(\"ARCHIVE\")}>\n              <ArchiveIcon className={classes.icons}/>\n            </IconButton>\n          </Tooltip>\n          \n          <Typography variant=\"h6\" style={{ marginLeft:\"10px\", float: \"center\", marginRight: 30 }}>\n            Welcome, {user.displayName ? user.displayName.split(' ')[0] : \"\"}\n          </Typography>\n          <Button style={{ fontSize: 21 }} color=\"inherit\" onClick={() => { setGridView(\"ACTIVE\"); firebase.auth().signOut() }}>\n            Log out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nconst SignIn = () => (\n  <StyledFirebaseAuth\n    uiConfig={uiConfig}\n    firebaseAuth={firebase.auth()}\n  />\n);\n\nconst Banner = ({ user, invites, title, setGridView }) => (\n  <React.Fragment>\n    {user ? <Welcome user={user} invites={invites} setGridView={setGridView}/> : <SignIn />}\n  </React.Fragment>\n);\n\nconst App = () => {\n  const [goalsJSON, setGoals] = useState({});\n  const [invites, setInvite] = useState({});\n  const [user, setUser] = useState({});\n  const [emailTouid, setEmailTouid] = useState({});\n  const [open, setOpen] = useState(false);\n  const [gridView, setGridView] = useState(\"ACTIVE\");\n\n  var goals = Object.values(goalsJSON);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(setUser);\n  }, []);\n\n  useEffect(() => {\n    const handleData = snap => {\n      if (user) {\n        if (snap.val()) {\n          let re = /\\./gi;\n          let email = user.email.replace(re, ',')\n          db.child('emailTouid/' + email).set(user.uid);\n          setEmailTouid(snap.val().emailTouid);\n          if (!snap.val().users[user.uid]) {\n            db.child(\"users\").child(user.uid).child(\"name\").set(user.displayName);\n          }\n          if (snap.val().users[user.uid] && snap.val().users[user.uid].goals) {\n            let goals_arr = snap.val().users[user.uid].goals;\n            setGoals(Object.values(goals_arr).map(goal => snap.val().goals[goal]));\n          }\n          else {\n            setGoals({});\n          }\n          if (snap.val().users[user.uid] && snap.val().users[user.uid].invites) {\n            let invites_arr = snap.val().users[user.uid].invites;\n            setInvite(Object.values(invites_arr).map(goal => snap.val().goals[goal]));\n          }\n          else {\n            setInvite({});\n          }\n        }\n      } else {\n        setGoals({});\n        setEmailTouid({});\n      }\n    };\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n  }, [user]);\n\n  return (\n    <div>\n      <Banner user={user} invites={invites} title=\"Work2Gather\" setGridView={setGridView}>\n      </Banner>\n      <br></br>\n      {user ? <AddGoal open={open} user={user} setOpen={setOpen} emailTouid={emailTouid} /> : null}\n      {user ? <Container maxWidth=\"xl\">\n        <GoalGrid goals={goals} invites={invites} user={user} gridView={gridView}/>\n      </Container> : null}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}