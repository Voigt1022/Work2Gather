{"ast":null,"code":"var _jsxFileName = \"/Users/eddie/Documents/GitHub/quick-travis/src/GoalGrid.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Goal from './Card/Goal';\nimport ArchiveCard from './Card/ArchiveCard';\nimport Invite from './Card/Invite';\nimport ToggleButtons from './Toggle';\nconst useStyles = makeStyles(theme => ({\n  gridcontainer: {\n    marginTop: \"5px\"\n  },\n  griditem: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  carditem: {\n    marginLeft: \"25px\",\n    marginRight: \"25px\"\n  },\n  inviteitem: {}\n}));\n\nconst GoalGrid = ({\n  goals,\n  invites,\n  user,\n  gridView\n}) => {\n  let classes = useStyles();\n  const [unfinished, setUnfinished] = useState([]);\n  const [pending, setPending] = useState([]);\n  const [invitelist, setInvitelist] = useState([]);\n  const [showGoals, setShowGoals] = React.useState('ALL');\n\n  const getDayOn = goal => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  useEffect(() => {\n    let unfinished_temp = [];\n    let pending_temp = [];\n    let invitelist_temp = [];\n    Object.values(goals).map(goal => goal.confirmed ? unfinished_temp.push(goal) : pending_temp.push(goal));\n    Object.values(invites).map(goal => goal.confirmed ? unfinished_temp.push(goal) : invitelist_temp.push(goal));\n    setUnfinished(unfinished_temp);\n    setPending(pending_temp);\n    setInvitelist(invitelist_temp);\n  }, [goals]);\n\n  const checkArchive = (uid, goal) => {\n    if (uid === goal[\"groupMembers\"][\"creator\"]) {\n      return goal.archivedCreator;\n    } else {\n      return goal.archivedInvitee;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, gridView === \"ACTIVE\" ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridcontainer,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.griditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 46\n    }\n  }, \"Active Goals\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, user ? /*#__PURE__*/React.createElement(ToggleButtons, {\n    showGoals: showGoals,\n    setShowGoals: setShowGoals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 55\n    }\n  }) : null))), showGoals === 'ALL' ? unfinished.map(goals => !checkArchive(user.uid, goals) ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.carditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Goal, {\n    goal: goals,\n    user: user,\n    key: goals.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })) : null) : unfinished.map(goals => !checkArchive(user.uid, goals) && goals['progress'][user.uid][getDayOn(goals)] < goals['minimum'] ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.carditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Goal, {\n    goal: goals,\n    user: user,\n    key: goals.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })) : null)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridcontainer,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.griditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 59\n    }\n  }, \"Pending Goals\")), pending.map(goals => !checkArchive(user.uid, goals) ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.carditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Goal, {\n    goal: goals,\n    user: user,\n    key: goals.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })) : null))) : gridView === \"INVITES\" ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridcontainer,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    className: classes.griditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 59\n    }\n  }, \"New Invites\")), invitelist.map(goals => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.carditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Invite, {\n    goal: goals,\n    user: user,\n    key: goals.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }))))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridcontainer,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.griditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 59\n    }\n  }, \"Archive\")), unfinished.map(goals => checkArchive(user.uid, goals) ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.carditem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveCard, {\n    goal: goals,\n    user: user,\n    key: goals.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })) : null)));\n};\n\nexport default GoalGrid;","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/GoalGrid.js"],"names":["React","useEffect","useState","makeStyles","Button","Typography","Grid","Goal","ArchiveCard","Invite","ToggleButtons","useStyles","theme","gridcontainer","marginTop","griditem","marginBottom","carditem","marginLeft","marginRight","inviteitem","GoalGrid","goals","invites","user","gridView","classes","unfinished","setUnfinished","pending","setPending","invitelist","setInvitelist","showGoals","setShowGoals","getDayOn","goal","startdate","Date","currentdate","deltatime","getTime","deltadays","Math","floor","unfinished_temp","pending_temp","invitelist_temp","Object","values","map","confirmed","push","checkArchive","uid","archivedCreator","archivedInvitee","float","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Goal from './Card/Goal'\nimport ArchiveCard from './Card/ArchiveCard'\nimport Invite from './Card/Invite'\nimport ToggleButtons from './Toggle'\n\nconst useStyles = makeStyles((theme) => ({\n  gridcontainer: {\n    marginTop: \"5px\"\n  },\n  griditem: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  carditem: {\n    marginLeft: \"25px\",\n    marginRight: \"25px\"\n  },\n  inviteitem: {\n  }\n}));\n\n\nconst GoalGrid = ({ goals, invites, user, gridView}) => {\n  let classes = useStyles();\n  const [unfinished, setUnfinished] = useState([]);\n  const [pending, setPending] = useState([]);\n  const [invitelist, setInvitelist] = useState([]);\n  const [showGoals, setShowGoals] = React.useState('ALL');\n\n  const getDayOn = (goal) => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  useEffect(() => {\n    let unfinished_temp = [];\n    let pending_temp = [];\n    let invitelist_temp = [];\n\n    Object.values(goals).map(goal => goal.confirmed ? unfinished_temp.push(goal) : pending_temp.push(goal));\n    Object.values(invites).map(goal => goal.confirmed ? unfinished_temp.push(goal) : invitelist_temp.push(goal));\n\n    setUnfinished(unfinished_temp);\n    setPending(pending_temp);\n    setInvitelist(invitelist_temp);\n  }, [goals]);\n\n  const checkArchive = (uid, goal) =>{\n    if (uid === goal[\"groupMembers\"][\"creator\"]){\n      return goal.archivedCreator\n    }\n    else{\n      return goal.archivedInvitee\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {(gridView === \"ACTIVE\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          \n          <Grid item xs={12} className={classes.griditem}>\n            <div>\n              <div style={{ float: 'left' }}><Typography variant=\"h4\">Active Goals</Typography></div>\n              <div style={{ float: 'right' }}>{user ? <ToggleButtons showGoals={showGoals} setShowGoals={setShowGoals}></ToggleButtons> : null}</div></div>\n          </Grid>\n\n          {(showGoals === 'ALL') ? \n            unfinished.map(goals => (!checkArchive(user.uid, goals)) ?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n            : \n            unfinished.map(goals => (!checkArchive(user.uid, goals) && (goals['progress'][user.uid][getDayOn(goals)] < goals['minimum'])) ?\n              <Grid item className={classes.carditem} >\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n          }\n        </Grid>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Pending Goals</Typography></Grid>\n            {pending.map(goals => (!checkArchive(user.uid, goals))?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null)\n            }\n        </Grid>\n      </React.Fragment>\n      : \n\n      (gridView === \"INVITES\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={10} className={classes.griditem}><Typography variant=\"h4\">New Invites</Typography></Grid>\n          {invitelist.map(goals =>\n            <Grid item className={classes.carditem}>\n              <Invite goal={goals} user={user} key={goals.key} />\n            </Grid>\n          )}\n        </Grid>\n      </React.Fragment>\n      : \n      <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Archive</Typography></Grid>\n          {unfinished.map(goals => checkArchive(user.uid, goals) ?\n            <Grid item className={classes.carditem}>\n              <ArchiveCard goal={goals} user={user} key={goals.key} />\n            </Grid> : null)\n          }\n      </Grid>}\n\n    </React.Fragment >\n  );\n};\n\nexport default GoalGrid;"]},"metadata":{},"sourceType":"module"}