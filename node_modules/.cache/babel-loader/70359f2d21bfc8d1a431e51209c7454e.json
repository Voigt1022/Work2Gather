{"ast":null,"code":"import _slicedToArray from\"/Users/eddie/Documents/GitHub/quick-travis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{makeStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import Typography from'@material-ui/core/Typography';import Grid from'@material-ui/core/Grid';import Goal from'./Card/Goal';import ArchiveCard from'./Card/ArchiveCard';import Invite from'./Card/Invite';import ToggleButtons from'./Toggle';var useStyles=makeStyles(function(theme){return{gridcontainer:{marginTop:\"5px\"},griditem:{marginTop:\"5px\",marginBottom:\"5px\"},carditem:{marginLeft:\"25px\",marginRight:\"25px\"},inviteitem:{}};});var GoalGrid=function GoalGrid(_ref){var goals=_ref.goals,invites=_ref.invites,user=_ref.user,gridView=_ref.gridView;var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),unfinished=_useState2[0],setUnfinished=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pending=_useState4[0],setPending=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),invitelist=_useState6[0],setInvitelist=_useState6[1];var _React$useState=React.useState('ALL'),_React$useState2=_slicedToArray(_React$useState,2),showGoals=_React$useState2[0],setShowGoals=_React$useState2[1];var getDayOn=function getDayOn(goal){var startdate=new Date(goal[\"startDate\"]);var currentdate=new Date();var deltatime=currentdate.getTime()-startdate.getTime();var deltadays=Math.floor(deltatime/(1000*3600*24));return deltadays;};useEffect(function(){var unfinished_temp=[];var pending_temp=[];var invitelist_temp=[];Object.values(goals).map(function(goal){return goal.confirmed?unfinished_temp.push(goal):pending_temp.push(goal);});Object.values(invites).map(function(goal){return goal.confirmed?unfinished_temp.push(goal):invitelist_temp.push(goal);});setUnfinished(unfinished_temp);setPending(pending_temp);setInvitelist(invitelist_temp);},[goals]);var checkArchive=function checkArchive(uid,goal){if(uid===goal[\"groupMembers\"][\"creator\"]){return goal.archivedCreator;}else{return goal.archivedInvitee;}};return/*#__PURE__*/React.createElement(React.Fragment,null,gridView===\"ACTIVE\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.gridcontainer,spacing:3,direction:\"row\",justify:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,className:classes.griditem},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{float:'left'}},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},\"Active Goals\")),/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},user?/*#__PURE__*/React.createElement(ToggleButtons,{showGoals:showGoals,setShowGoals:setShowGoals}):null))),showGoals==='ALL'?unfinished.map(function(goals){return!checkArchive(user.uid,goals)?/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.carditem},/*#__PURE__*/React.createElement(Goal,{goal:goals,user:user,key:goals.key})):null;}):unfinished.map(function(goals){return!checkArchive(user.uid,goals)&&goals['progress'][user.uid][getDayOn(goals)]<goals['minimum']?/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.carditem},/*#__PURE__*/React.createElement(Goal,{goal:goals,user:user,key:goals.key})):null;})),/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.gridcontainer,spacing:3,direction:\"row\",justify:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,className:classes.griditem},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},\"Pending Goals\")),pending.map(function(goals){return!checkArchive(user.uid,goals)?/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.carditem},/*#__PURE__*/React.createElement(Goal,{goal:goals,user:user,key:goals.key})):null;}))):gridView===\"INVITES\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.gridcontainer,spacing:3,direction:\"row\",justify:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,className:classes.griditem},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},\"New Invites\")),invitelist.map(function(goals){return/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.carditem},/*#__PURE__*/React.createElement(Invite,{goal:goals,user:user,key:goals.key}));}))):/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.gridcontainer,spacing:3,direction:\"row\",justify:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,className:classes.griditem},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},\"Archive\")),unfinished.map(function(goals){return checkArchive(user.uid,goals)?/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.carditem},/*#__PURE__*/React.createElement(ArchiveCard,{goal:goals,user:user,key:goals.key})):null;})));};export default GoalGrid;","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/GoalGrid.js"],"names":["React","useEffect","useState","makeStyles","Button","Typography","Grid","Goal","ArchiveCard","Invite","ToggleButtons","useStyles","theme","gridcontainer","marginTop","griditem","marginBottom","carditem","marginLeft","marginRight","inviteitem","GoalGrid","goals","invites","user","gridView","classes","unfinished","setUnfinished","pending","setPending","invitelist","setInvitelist","showGoals","setShowGoals","getDayOn","goal","startdate","Date","currentdate","deltatime","getTime","deltadays","Math","floor","unfinished_temp","pending_temp","invitelist_temp","Object","values","map","confirmed","push","checkArchive","uid","archivedCreator","archivedInvitee","float","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Goal from './Card/Goal'\nimport ArchiveCard from './Card/ArchiveCard'\nimport Invite from './Card/Invite'\nimport ToggleButtons from './Toggle'\n\nconst useStyles = makeStyles((theme) => ({\n  gridcontainer: {\n    marginTop: \"5px\"\n  },\n  griditem: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  carditem: {\n    marginLeft: \"25px\",\n    marginRight: \"25px\"\n  },\n  inviteitem: {\n  }\n}));\n\n\nconst GoalGrid = ({ goals, invites, user, gridView}) => {\n  let classes = useStyles();\n  const [unfinished, setUnfinished] = useState([]);\n  const [pending, setPending] = useState([]);\n  const [invitelist, setInvitelist] = useState([]);\n  const [showGoals, setShowGoals] = React.useState('ALL');\n\n  const getDayOn = (goal) => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  useEffect(() => {\n    let unfinished_temp = [];\n    let pending_temp = [];\n    let invitelist_temp = [];\n\n    Object.values(goals).map(goal => goal.confirmed ? unfinished_temp.push(goal) : pending_temp.push(goal));\n    Object.values(invites).map(goal => goal.confirmed ? unfinished_temp.push(goal) : invitelist_temp.push(goal));\n\n    setUnfinished(unfinished_temp);\n    setPending(pending_temp);\n    setInvitelist(invitelist_temp);\n  }, [goals]);\n\n  const checkArchive = (uid, goal) =>{\n    if (uid === goal[\"groupMembers\"][\"creator\"]){\n      return goal.archivedCreator\n    }\n    else{\n      return goal.archivedInvitee\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {(gridView === \"ACTIVE\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          \n          <Grid item xs={12} className={classes.griditem}>\n            <div>\n              <div style={{ float: 'left' }}><Typography variant=\"h4\">Active Goals</Typography></div>\n              <div style={{ float: 'right' }}>{user ? <ToggleButtons showGoals={showGoals} setShowGoals={setShowGoals}></ToggleButtons> : null}</div></div>\n          </Grid>\n\n          {(showGoals === 'ALL') ? \n            unfinished.map(goals => (!checkArchive(user.uid, goals)) ?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n            : \n            unfinished.map(goals => (!checkArchive(user.uid, goals) && (goals['progress'][user.uid][getDayOn(goals)] < goals['minimum'])) ?\n              <Grid item className={classes.carditem} >\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null) \n          }\n        </Grid>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Pending Goals</Typography></Grid>\n            {pending.map(goals => (!checkArchive(user.uid, goals))?\n              <Grid item className={classes.carditem}>\n                <Goal goal={goals} user={user} key={goals.key} />\n              </Grid> : null)\n            }\n        </Grid>\n      </React.Fragment>\n      : \n\n      (gridView === \"INVITES\") ?\n      <React.Fragment>\n        <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={10} className={classes.griditem}><Typography variant=\"h4\">New Invites</Typography></Grid>\n          {invitelist.map(goals =>\n            <Grid item className={classes.carditem}>\n              <Invite goal={goals} user={user} key={goals.key} />\n            </Grid>\n          )}\n        </Grid>\n      </React.Fragment>\n      : \n      <Grid container className={classes.gridcontainer} spacing={3} direction=\"row\" justify=\"flex-start\">\n          <Grid item xs={12} className={classes.griditem}><Typography variant=\"h4\">Archive</Typography></Grid>\n          {unfinished.map(goals => checkArchive(user.uid, goals) ?\n            <Grid item className={classes.carditem}>\n              <ArchiveCard goal={goals} user={user} key={goals.key} />\n            </Grid> : null)\n          }\n      </Grid>}\n\n    </React.Fragment >\n  );\n};\n\nexport default GoalGrid;"]},"metadata":{},"sourceType":"module"}