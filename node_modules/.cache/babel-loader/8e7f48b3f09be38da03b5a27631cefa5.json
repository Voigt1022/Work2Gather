{"ast":null,"code":"var _jsxFileName = \"/Users/eddie/Documents/GitHub/quick-travis/src/AddGoal.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport firebase from \"./shared/firebase\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst db = firebase.database().ref();\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: 5\n  }\n}));\n\nconst AddGoal = ({\n  open,\n  user,\n  setOpen,\n  emailTouid\n}) => {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [metric, setMetric] = useState();\n  const [minimum, setMinimum] = useState();\n  const [duration, setDuration] = useState();\n  const [email, setEmail] = useState();\n  const [goalType, setGoalType] = useState(\"\");\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle();\n    setSelectedDate(new Date());\n    setMetric();\n    setMinimum();\n    setDuration();\n    setGoalType('');\n    setEmail();\n  };\n\n  const handleSubmit = () => {\n    //console.log(title);\n    //console.log(description);\n    //console.log(metric);\n    //console.log(minimum);\n    //console.log(duration);\n    if (title === undefined || description === undefined || metric === undefined || minimum === undefined && goalType === \"Quantitative\" || duration === undefined || email === undefined || title === \"\" || description === \"\" || metric === \"\" || minimum === \"\" && goalType === \"Quantitative\" || duration === \"\" || email === \"\" || goalType == \"\") {\n      alert(\"Please fill in all fields.\");\n    } else {\n      let rg = /\\./g;\n      let temp = email.replace(rg, \",\");\n\n      if (!emailTouid[temp]) {\n        alert(\"The user does not exist. Please try again.\");\n      } else {\n        alert(\"Success! New Goal Created!\");\n        var dt = selectedDate.toLocaleString(\"en-US\", {\n          timeZone: \"America/Chicago\"\n        });\n        var myJSON = JSON.stringify(dt);\n        var timeNow = myJSON.split('\"')[1].split(\",\")[0];\n        var myRef = db.child(\"goals\").push();\n        var key = myRef.key;\n        var newData = {\n          deleted: false,\n          rejected: false,\n          confirmed: false,\n          archivedCreator: false,\n          archivedInvitee: false,\n          key: key,\n          title: title,\n          description: description,\n          startDate: timeNow,\n          duration: duration,\n          goalType: goalType,\n          groupMembers: {\n            creator: user.uid,\n            invitee: emailTouid[temp]\n          },\n          minimum: goalType === \"Quantitative\" ? minimum : \"1\",\n          metric: metric,\n          progress: {\n            [user.uid]: {\n              0: 0\n            },\n            [emailTouid[temp]]: {\n              0: 0\n            }\n          },\n          lastRemindCreator: -1,\n          lastRemindInvitee: -1\n        };\n        myRef.update(newData); //add goals to creator\n\n        db.child(\"users\").child(user.uid).child(\"goals\").child(key).set(key); //add goal to invitee\n\n        db.child(\"users\").child(emailTouid[temp]).child(\"invites\").child(key).set(key);\n        handleClose();\n      }\n    }\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AddCircleIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 24\n      }\n    }),\n    size: \"large\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Add a new goal\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Create a new goal\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Goal Title\",\n    fullWidth: true,\n    onChange: event => setTitle(event.target.value),\n    placeholder: \"What's your goal focus? (e.g. Reading, Meditation, Daily Pushups)\",\n    inputProps: {\n      maxLength: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Goal Description\",\n    fullWidth: true,\n    onChange: event => setDescription(event.target.value),\n    placeholder: \"What will you do every day to reach your goal? Set S.M.A.R.T goals!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Goal Metric\",\n    fullWidth: true,\n    onChange: event => setMetric(event.target.value),\n    placeholder: \"What unit will you measure everyday? (e.g. pushups done, minutes spent)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-name-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Goal Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-name-label\",\n    id: \"demo-mutiple-name\",\n    value: goalType,\n    style: {\n      width: '100%'\n    },\n    onChange: event => setGoalType(event.target.value),\n    input: /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 22\n      }\n    }),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, ['Quantitative', 'Qualitative'].map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, name)))), goalType === 'Qualitative' ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Daily Minimum\",\n    fullWidth: true,\n    onChange: event => setMinimum(event.target.value),\n    placeholder: \"How much do you need to do to complete your daily goal? (e.g. 10)\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Goal Duration\",\n    fullWidth: true,\n    onChange: event => setDuration(event.target.value),\n    placeholder: \"How many weeks will you work on your goal?(e.g. 2)\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    label: \"Goal Start Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    fullWidth: true,\n    KeyboardButtonProps: {\n      \"aria-label\": \"change date\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Invite Your Friend\",\n    fullWidth: true,\n    onChange: event => setEmail(event.target.value),\n    placeholder: \"Who do you want to work with? Please provide your friend's email address.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AddGoal;","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/AddGoal.js"],"names":["React","useState","makeStyles","withStyles","Button","Grid","AddCircleIcon","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DateFnsUtils","InputLabel","MenuItem","FormControl","Select","Input","NativeSelect","InputBase","MuiPickersUtilsProvider","KeyboardDatePicker","firebase","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","db","database","ref","useStyles","button","AddGoal","open","user","setOpen","emailTouid","title","setTitle","description","setDescription","selectedDate","setSelectedDate","Date","metric","setMetric","minimum","setMinimum","duration","setDuration","email","setEmail","goalType","setGoalType","classes","handleOpen","handleClose","handleSubmit","undefined","alert","rg","temp","replace","dt","toLocaleString","timeZone","myJSON","JSON","stringify","timeNow","split","myRef","child","push","key","newData","deleted","rejected","confirmed","archivedCreator","archivedInvitee","startDate","groupMembers","creator","uid","invitee","progress","lastRemindCreator","lastRemindInvitee","update","set","handleDateChange","date","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","event","target","value","maxLength","formControl","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n  import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport firebase from \"./shared/firebase\";\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: 5,\n  },\n}));\n\nconst AddGoal = ({ open, user, setOpen, emailTouid }) => {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [metric, setMetric] = useState();\n  const [minimum, setMinimum] = useState();\n  const [duration, setDuration] = useState();\n  const [email, setEmail] = useState();\n  const [goalType, setGoalType] = useState(\"\");\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle();\n    setSelectedDate(new Date());\n    setMetric();\n    setMinimum();\n    setDuration();\n    setGoalType('');\n    setEmail();\n  };\n\n  const handleSubmit = () => {\n    //console.log(title);\n    //console.log(description);\n    //console.log(metric);\n    //console.log(minimum);\n    //console.log(duration);\n    if (\n      title === undefined ||\n      description === undefined ||\n      metric === undefined ||\n      (minimum === undefined && goalType === \"Quantitative\") ||\n      duration === undefined ||\n      email === undefined ||\n      title === \"\" ||\n      description === \"\" ||\n      metric === \"\" ||\n      (minimum === \"\" && goalType === \"Quantitative\") ||\n      duration === \"\" ||\n      email === \"\" || \n      goalType == \"\"\n    ) {\n      alert(\"Please fill in all fields.\");\n    } else {\n      \n      let rg = /\\./g;\n      let temp = email.replace(rg, \",\");\n      if (!emailTouid[temp]) {\n        alert(\"The user does not exist. Please try again.\");\n      } else {\n        alert(\"Success! New Goal Created!\");\n        var dt = selectedDate.toLocaleString(\"en-US\", {\n          timeZone: \"America/Chicago\",\n        });\n        var myJSON = JSON.stringify(dt);\n        var timeNow = myJSON.split('\"')[1].split(\",\")[0];\n        var myRef = db.child(\"goals\").push();\n        var key = myRef.key;\n\n        var newData = {\n          deleted: false,\n          rejected: false, \n          confirmed: false,\n          archivedCreator: false, \n          archivedInvitee: false, \n          key: key,\n          title: title,\n          description: description,\n          startDate: timeNow,\n          duration: duration,\n          goalType: goalType,\n          groupMembers: {\n            creator: user.uid,\n            invitee: emailTouid[temp],\n          },\n          minimum: goalType === \"Quantitative\" ? minimum : \"1\",\n          metric: metric,\n          progress: {\n            [user.uid]: {\n              0: 0,\n            },\n            [emailTouid[temp]]: {\n              0: 0,\n            },\n          },\n          lastRemindCreator: -1,\n          lastRemindInvitee: -1,\n        };\n\n        myRef.update(newData);\n\n        //add goals to creator\n        db.child(\"users\").child(user.uid).child(\"goals\").child(key).set(key);\n\n        //add goal to invitee\n        db.child(\"users\").child(emailTouid[temp]).child(\"invites\").child(key).set(key);\n        \n        handleClose();\n      }\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddCircleIcon fontSize=\"large\" />}\n            size=\"large\"\n            onClick={handleOpen}\n          >\n            Add a new goal\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Create a new goal</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Goal Title\"\n            fullWidth\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"What's your goal focus? (e.g. Reading, Meditation, Daily Pushups)\"\n            inputProps={{maxLength: 15}}\n          />\n          {/* Goal Description Added to SeeMore? */}\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Description\"\n            fullWidth\n            onChange={(event) => setDescription(event.target.value)}\n            placeholder=\"What will you do every day to reach your goal? Set S.M.A.R.T goals!\"\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Metric\"\n            fullWidth\n            onChange={(event) => setMetric(event.target.value)}\n            placeholder=\"What unit will you measure everyday? (e.g. pushups done, minutes spent)\"\n          />\n          <FormControl className={classes.formControl} style={{width:'100%'}}>\n            <InputLabel id=\"demo-mutiple-name-label\">Goal Type</InputLabel>\n            <Select \n\n              labelId=\"demo-mutiple-name-label\"\n              id=\"demo-mutiple-name\"\n              value={goalType}\n              style={{width:'100%'}}\n              onChange={(event) => setGoalType(event.target.value)}\n              input={<Input style={{width:'100%'}}/>}\n              MenuProps={MenuProps}\n            >\n              {['Quantitative', 'Qualitative'].map(name => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          { goalType === 'Qualitative' ? <React.Fragment></React.Fragment> :\n          <TextField\n            margin=\"dense\"\n            label=\"Daily Minimum\"\n            fullWidth\n            onChange={(event) => setMinimum(event.target.value)}\n            placeholder=\"How much do you need to do to complete your daily goal? (e.g. 10)\"\n            type=\"number\"\n          /> }\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Duration\"\n            fullWidth\n            onChange={(event) => setDuration(event.target.value)}\n            placeholder=\"How many weeks will you work on your goal?(e.g. 2)\"\n            type=\"number\"\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              label=\"Goal Start Date\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              fullWidth\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <TextField\n            margin=\"dense\"\n            label=\"Invite Your Friend\"\n            fullWidth\n            onChange={(event) => setEmail(event.target.value)}\n            placeholder=\"Who do you want to work with? Please provide your friend's email address.\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AddGoal;"]},"metadata":{},"sourceType":"module"}