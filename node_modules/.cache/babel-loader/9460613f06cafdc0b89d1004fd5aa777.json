{"ast":null,"code":"var _jsxFileName = \"/Users/eddie/Documents/GitHub/quick-travis/src/Card/SeeMore.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressGrid from \"./ProgressGrid\";\nimport firebase from \"../shared/firebase\";\nimport { AreaChart, Area, BarChart, Bar, LineChart, Label, ReferenceLine, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport ToggleButtonsView from './ToggleView';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n    align: 'right'\n  },\n  yaxis: {\n    padding: '10px',\n    textAlign: 'center'\n  }\n}));\nexport default function SeeMore({\n  goal,\n  buttonText\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [goalData, setGoalData] = useState([]);\n  const [showView, setShowView] = React.useState('BAR');\n  const [creatorName, setCreatorName] = useState([]);\n  const [inviteeName, setInviteeName] = useState([]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    let tempData = [];\n    let users = Object.keys(goal[\"progress\"]);\n\n    for (let j = 0; j < goal[\"progress\"][users[0]].length; j++) {\n      let entry = {\n        name: j.toString(),\n        uv: goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][j],\n        pv: goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][j]\n      };\n      tempData.push(entry);\n    }\n\n    setGoalData(tempData);\n  }, [goal]);\n  useEffect(() => {\n    const setGoalUserNames = snap => {\n      if (snap.val()) {\n        setCreatorName(snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"].split(\" \")[0]);\n        setInviteeName(snap.val()[goal[\"groupMembers\"][\"invitee\"]][\"name\"].split(\" \")[0]);\n      }\n    };\n\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setGoalUserNames, error => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setGoalUserNames);\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"medium\",\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      width: \"150px\"\n    },\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, buttonText ? buttonText : 'See More')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    style: {\n      overflow: \"scrollbar\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, goal.title)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"right\",\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonsView, {\n    showView: showView,\n    setShowView: setShowView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, goal.description, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), \"Started: \", goal.startDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), \"Days Left: \", goal.duration * 7 - getDayOn(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, showView === \"LINE\" ? /*#__PURE__*/React.createElement(LineChart, {\n    width: 500,\n    height: 300,\n    data: goalData,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 30,\n      bottom: 30\n    },\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    value: \"Days\",\n    offset: 0,\n    position: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(YAxis, {\n    className: classes.yaxis,\n    label: {\n      value: goal.metric,\n      angle: -90,\n      position: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: creatorName,\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: inviteeName,\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: goal[\"minimum\"],\n    label: \"Goal\",\n    stroke: \"green\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })) : showView === \"BAR\" ? /*#__PURE__*/React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: goalData,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 30,\n      bottom: 30\n    },\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    value: \"Days\",\n    offset: 0,\n    position: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(YAxis, {\n    className: classes.yaxis,\n    label: {\n      value: goal.metric,\n      angle: -90,\n      position: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: creatorName,\n    dataKey: \"uv\",\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: inviteeName,\n    dataKey: \"pv\",\n    fill: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: goal[\"minimum\"],\n    label: \"Goal\",\n    stroke: \"green\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(AreaChart, {\n    width: 500,\n    height: 300,\n    data: goalData,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 30,\n      bottom: 30\n    },\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#8884d8\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#8884d8\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"colorPv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#82ca9d\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#82ca9d\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    value: \"Days\",\n    offset: 0,\n    position: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(YAxis, {\n    className: classes.yaxis,\n    label: {\n      value: goal.metric,\n      angle: -90,\n      position: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    name: creatorName,\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#8884d8\",\n    fillOpacity: 1,\n    fill: \"url(#colorUv)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    name: inviteeName,\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#82ca9d\",\n    fillOpacity: 1,\n    fill: \"url(#colorPv)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: goal[\"minimum\"],\n    label: \"Goal\",\n    stroke: \"green\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/Card/SeeMore.js"],"names":["React","useEffect","useState","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ProgressGrid","firebase","AreaChart","Area","BarChart","Bar","LineChart","Label","ReferenceLine","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ToggleButtonsView","useStyles","theme","form","display","flexDirection","margin","width","align","yaxis","padding","textAlign","SeeMore","goal","buttonText","classes","open","setOpen","goalData","setGoalData","showView","setShowView","creatorName","setCreatorName","inviteeName","setInviteeName","getDayOn","startdate","Date","currentdate","deltatime","getTime","deltadays","Math","floor","handleClickOpen","handleClose","tempData","users","Object","keys","j","length","entry","name","toString","uv","pv","push","setGoalUserNames","snap","val","split","dbUsers","database","ref","on","error","alert","off","overflow","float","title","description","startDate","duration","top","right","left","bottom","value","metric","angle","position","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressGrid from \"./ProgressGrid\";\nimport firebase from \"../shared/firebase\";\n\nimport {\n  AreaChart, Area, BarChart, Bar, LineChart, Label, ReferenceLine, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport ToggleButtonsView from './ToggleView';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n    align: 'right',\n  },\n  yaxis:{\n  \tpadding:'10px',\n  \ttextAlign: 'center'\n  },\n}));\n\nexport default function SeeMore({ goal, buttonText }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [goalData, setGoalData] = useState([]);\n  const [showView, setShowView] = React.useState('BAR');\n  const [creatorName, setCreatorName] = useState([]);\n  const [inviteeName, setInviteeName] = useState([]);\n\n  const getDayOn = () => {\n    var startdate = new Date(goal[\"startDate\"]);\n    var currentdate = new Date();\n    let deltatime = currentdate.getTime() - startdate.getTime();\n    let deltadays = Math.floor(deltatime / (1000 * 3600 * 24));\n    return deltadays;\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    let tempData = []; \n    let users = Object.keys(goal[\"progress\"]);\n    for(let j = 0; j < goal[\"progress\"][users[0]].length; j++){\n      let entry = {\n        name: j.toString(), \n        uv: goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][j],\n        pv: goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][j],\n      }\n      tempData.push(entry); \n    }\n    setGoalData(tempData);\n  }, [goal]);\n\n  useEffect(() => {\n    const setGoalUserNames = (snap) => {\n      if (snap.val()) {\n        setCreatorName(\n          snap.val()[goal[\"groupMembers\"][\"creator\"]][\"name\"].split(\" \")[0]\n        );\n        setInviteeName(\n          snap.val()[goal[\"groupMembers\"][\"invitee\"]][\"name\"].split(\" \")[0]\n        );\n      }\n    };\n\n    const dbUsers = firebase.database().ref(\"users\");\n    dbUsers.on(\"value\", setGoalUserNames, (error) => alert(error));\n    return () => {\n      dbUsers.off(\"value\", setGoalUserNames);\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Button  \n            size=\"medium\" \n            variant=\"contained\" \n            color=\"primary\" \n            style={{width:\"150px\"}}\n            onClick={handleClickOpen}>\n            {buttonText ? buttonText : 'See More'}\n          </Button>\n        </div>\n        <div>\n        </div>\n      </div>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"md\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n        style={{overflow:\"scrollbar\"}}\n      >\n        <div>\n          <div style={{float:\"left\"}}>\n            <DialogTitle id=\"max-width-dialog-title\">{goal.title}</DialogTitle>\n          </div>\n          <div style={{float:\"right\", margin:\"10px\"}}>\n            <ToggleButtonsView showView={showView} setShowView={setShowView}/>\n          </div>\n        </div>\n        <DialogContent>\n          <div>\n            <div style={{float:'left'}}>\n              <DialogContentText>\n                {goal.description}\n                <br></br>\n                Started: {goal.startDate}\n                <br></br>\n                Days Left: {goal.duration * 7 - getDayOn()}\n                <br></br>\n              </DialogContentText>\n            </div>\n            <div style={{float: 'right'}}>\n              { (showView === \"LINE\") ?\n              <LineChart\n                width={500}\n                height={300}\n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n        \t\t    <XAxis dataKey=\"name\">\n        \t   \t\t  <Label value=\"Days\" offset={0} position=\"bottom\" />\n        \t  \t  </XAxis>  \t\t\t\n        \t  \t  <YAxis className={classes.yaxis} label={{ value: goal.metric, angle: -90, position: 'left'}} />\n                <Tooltip />\n        \t\t\t  <Legend verticalAlign=\"top\" height={36}/>\n                <Line name={creatorName} type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n               \t<Line name={inviteeName} type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\n               \t<ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </LineChart>\n              :\n              (showView === \"BAR\") ?\n              <BarChart \n                width={500} \n                height={300} \n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\">\n                  <Label value=\"Days\" offset={0} position=\"bottom\" />\n                </XAxis>\n                <YAxis className={classes.yaxis} label={{value: goal.metric, angle: -90, position: 'left'}}/>\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36}/>\n                <Bar name={creatorName} dataKey=\"uv\" fill=\"#8884d8\" />\n                <Bar name={inviteeName} dataKey=\"pv\" fill=\"#82ca9d\" />\n                <ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </BarChart>\n              :\n              <AreaChart \n                width={500} \n                height={300} \n                data={goalData}\n                margin={{\n                  top: 5, right: 30, left: 30, bottom: 30,\n                }}\n                className={classes.form}\n              >\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                  </linearGradient>\n                  <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <XAxis dataKey=\"name\">\n                  <Label value=\"Days\" offset={0} position=\"bottom\" />\n                </XAxis>\n                <YAxis className={classes.yaxis} label={{value: goal.metric, angle: -90, position: 'left'}}/>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36}/>\n                <Area name={creatorName} type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                <Area name={inviteeName} type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                <ReferenceLine y={goal[\"minimum\"]} label=\"Goal\" stroke=\"green\" strokeDasharray='5 5'  />\n              </AreaChart>}\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}