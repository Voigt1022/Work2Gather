{"ast":null,"code":"var _jsxFileName = \"/Users/eddie/Documents/GitHub/quick-travis/src/Card/ProgressGrid.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport firebase from \"../shared/firebase\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { TextField } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nconst db = firebase.database().ref();\nconst useStyles = makeStyles({\n  root: {\n    width: \"35%\",\n    marginLeft: \"10%\",\n    overflow: \"auto\",\n    marginTop: \"50px\",\n    display: \"inline-block\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  table: {\n    tableLayout: \"auto\",\n    width: \"99.9%\",\n    marginTop: \"0px\",\n    marginBottom: \"10px\"\n  },\n  marginless: {\n    margin: 0\n  },\n  tableCont: {\n    width: \"300\"\n  },\n  progressFilled1: {\n    size: \"small\",\n    backgroundColor: \"#14ECF5\",\n    //our own special blue\n    border: \"1px solid black\"\n  },\n  progressFilled2: {\n    size: \"small\",\n    backgroundColor: \"#14F58E\",\n    //our own special green\n    border: \"1px solid black\"\n  },\n  progressUnfilled: {\n    size: \"small\",\n    border: \"1px solid black\"\n  },\n  pos: {\n    marginBottom: 12\n  },\n  ourSpecialBlue: {\n    backgroundColor: \"#14ECF5\",\n    //our own special blue\n    padding: \"5px\"\n  },\n  ourSpecialGreen: {\n    backgroundColor: \"#14F58E\",\n    //our own special red\n    padding: \"5px\"\n  },\n  weekDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\"\n  }\n});\n\nconst ProgressGrid = ({\n  goal\n}) => {\n  let classes = useStyles();\n  let user1Rows = [];\n  let user2Rows = [];\n  let user1Cells = [];\n  let user2Cells = [];\n  let i = 0;\n\n  for (i = 0; i < goal[\"duration\"] * 7; i++) {\n    if (user1Cells.length < 7) {\n      user1Cells.push( /*#__PURE__*/React.createElement(TableCell, {\n        className: goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"] ? classes.progressFilled1 : classes.progressUnfilled,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, \"i\"));\n      user2Cells.push( /*#__PURE__*/React.createElement(TableCell, {\n        className: goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"] ? classes.progressFilled2 : classes.progressUnfilled,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      user1Rows.push( /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }\n      }, user1Cells));\n      user1Cells = [];\n      user1Cells.push( /*#__PURE__*/React.createElement(TableCell, {\n        className: goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"] ? classes.progressFilled1 : classes.progressUnfilled,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }));\n      user2Rows.push( /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 22\n        }\n      }, user2Cells));\n      user2Cells = [];\n      user2Cells.push( /*#__PURE__*/React.createElement(TableCell, {\n        className: goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"] ? classes.progressFilled2 : classes.progressUnfilled,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  user1Rows.push( /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 18\n    }\n  }, user1Cells));\n  user2Rows.push( /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 18\n    }\n  }, user2Cells));\n  let table = [];\n  let daysOfTheWeek = /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"SUN\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"MON\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"TUE\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"WED\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"THU\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"FRI\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.weekDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"SAT\"));\n\n  for (let i = 0; i < user1Rows.length; i++) {\n    table.push( /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"tablefragment\" + i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.marginless,\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"Week \" + (i + 1)), /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, daysOfTheWeek, user1Rows[i], user2Rows[i]))));\n  }\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, table);\n};\n\nexport default ProgressGrid;","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/Card/ProgressGrid.js"],"names":["React","useState","useEffect","makeStyles","Card","CardActions","CardContent","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","firebase","Slider","TextField","Container","db","database","ref","useStyles","root","width","marginLeft","overflow","marginTop","display","bullet","margin","transform","title","fontSize","table","tableLayout","marginBottom","marginless","tableCont","progressFilled1","size","backgroundColor","border","progressFilled2","progressUnfilled","pos","ourSpecialBlue","padding","ourSpecialGreen","weekDays","borderBottom","paddingBottom","paddingTop","textAlign","ProgressGrid","goal","classes","user1Rows","user2Rows","user1Cells","user2Cells","i","length","push","daysOfTheWeek"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport firebase from \"../shared/firebase\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { TextField } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"35%\",\n    marginLeft: \"10%\",\n    overflow: \"auto\",\n    marginTop: \"50px\",\n    display: \"inline-block\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  table: {\n    tableLayout: \"auto\",\n    width: \"99.9%\",\n    marginTop: \"0px\",\n    marginBottom: \"10px\",\n  },\n  marginless: {\n    margin: 0,\n  },\n  tableCont: {\n    width: \"300\",\n  },\n  progressFilled1: {\n    size: \"small\",\n    backgroundColor: \"#14ECF5\", //our own special blue\n    border: \"1px solid black\",\n  },\n  progressFilled2: {\n    size: \"small\",\n    backgroundColor: \"#14F58E\", //our own special green\n    border: \"1px solid black\",\n  },\n  progressUnfilled: {\n    size: \"small\",\n    border: \"1px solid black\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  ourSpecialBlue: {\n    backgroundColor: \"#14ECF5\", //our own special blue\n    padding: \"5px\",\n  },\n  ourSpecialGreen: {\n    backgroundColor: \"#14F58E\", //our own special red\n    padding: \"5px\",\n  },\n  weekDays: {\n    size: \"small\",\n    borderBottom: \"1px solid black\",\n    paddingBottom: \"0px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n  },\n});\n\nconst ProgressGrid = ({goal}) => {\n  let classes = useStyles();\n  let user1Rows = [];\n  let user2Rows = [];\n  let user1Cells = [];\n  let user2Cells = [];\n\n  let i = 0;\n  for (i = 0; i < goal[\"duration\"] * 7; i++) {\n    if (user1Cells.length < 7) {\n      user1Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled1\n              : classes.progressUnfilled\n          }\n          key={i}\n        >\n        i\n        </TableCell>\n      );\n      user2Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled2\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n    } else {\n      user1Rows.push(<TableRow>{user1Cells}</TableRow>);\n      user1Cells = [];\n      user1Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"creator\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled1\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n      user2Rows.push(<TableRow>{user2Cells}</TableRow>);\n      user2Cells = [];\n      user2Cells.push(\n        <TableCell\n          className={\n            goal[\"progress\"][goal[\"groupMembers\"][\"invitee\"]][i] >= goal[\"minimum\"]\n              ? classes.progressFilled2\n              : classes.progressUnfilled\n          }\n          key={i}\n        ></TableCell>\n      );\n    }\n  }\n  user1Rows.push(<TableRow>{user1Cells}</TableRow>);\n  user2Rows.push(<TableRow>{user2Cells}</TableRow>);\n\n  let table = [];\n  let daysOfTheWeek = (\n    <TableRow>\n      <TableCell className={classes.weekDays}>SUN</TableCell>\n      <TableCell className={classes.weekDays}>MON</TableCell>\n      <TableCell className={classes.weekDays}>TUE</TableCell>\n      <TableCell className={classes.weekDays}>WED</TableCell>\n      <TableCell className={classes.weekDays}>THU</TableCell>\n      <TableCell className={classes.weekDays}>FRI</TableCell>\n      <TableCell className={classes.weekDays}>SAT</TableCell>\n    </TableRow>\n  );\n  for (let i = 0; i < user1Rows.length; i++) {\n    table.push(\n      <React.Fragment key={\"tablefragment\" + i}>\n        <Typography className={classes.marginless} variant=\"body2\">\n          {\"Week \" + (i + 1)}\n        </Typography>\n        <Table className={classes.table}>\n          <TableBody>\n            {daysOfTheWeek}\n            {user1Rows[i]}\n            {user2Rows[i]}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <TableContainer className={classes.table} aria-label=\"simple table\">\n      {table}\n    </TableContainer>\n  );\n};\n\nexport default ProgressGrid;"]},"metadata":{},"sourceType":"module"}