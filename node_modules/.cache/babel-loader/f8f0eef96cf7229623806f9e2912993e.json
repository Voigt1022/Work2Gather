{"ast":null,"code":"import _defineProperty from\"/Users/eddie/Documents/GitHub/quick-travis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/eddie/Documents/GitHub/quick-travis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{makeStyles,withStyles}from\"@material-ui/core/styles\";import Button from\"@material-ui/core/Button\";import Grid from\"@material-ui/core/Grid\";import AddCircleIcon from\"@material-ui/icons/AddCircle\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import\"date-fns\";import DateFnsUtils from\"@date-io/date-fns\";import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import Input from'@material-ui/core/Input';import NativeSelect from'@material-ui/core/NativeSelect';import InputBase from'@material-ui/core/InputBase';import{MuiPickersUtilsProvider,KeyboardDatePicker}from\"@material-ui/pickers\";import firebase from\"./shared/firebase\";var BootstrapInput=withStyles(function(theme){return{root:{'label + &':{marginTop:theme.spacing(3)}},input:{borderRadius:4,position:'relative',backgroundColor:theme.palette.background.paper,border:'1px solid #ced4da',fontSize:16,padding:'10px 26px 10px 12px',transition:theme.transitions.create(['border-color','box-shadow']),// Use the system font instead of the default Roboto font.\nfontFamily:['-apple-system','BlinkMacSystemFont','\"Segoe UI\"','Roboto','\"Helvetica Neue\"','Arial','sans-serif','\"Apple Color Emoji\"','\"Segoe UI Emoji\"','\"Segoe UI Symbol\"'].join(','),'&:focus':{borderRadius:4,borderColor:'#80bdff',boxShadow:'0 0 0 0.2rem rgba(0,123,255,.25)'}}};})(InputBase);var db=firebase.database().ref();var useStyles=makeStyles(function(theme){return{button:{marginTop:5}};});var AddGoal=function AddGoal(_ref){var open=_ref.open,user=_ref.user,setOpen=_ref.setOpen,emailTouid=_ref.emailTouid;var _useState=useState(),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(new Date()),_useState6=_slicedToArray(_useState5,2),selectedDate=_useState6[0],setSelectedDate=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),metric=_useState8[0],setMetric=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),minimum=_useState10[0],setMinimum=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),duration=_useState12[0],setDuration=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),email=_useState14[0],setEmail=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),goalType=_useState16[0],setGoalType=_useState16[1];var classes=useStyles();var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);setTitle();setSelectedDate(new Date());setMetric();setMinimum();setDuration();setGoalType('');setEmail();};var handleSubmit=function handleSubmit(){//console.log(title);\n//console.log(description);\n//console.log(metric);\n//console.log(minimum);\n//console.log(duration);\nif(title===undefined||description===undefined||metric===undefined||minimum===undefined&&goalType===\"Quantitative\"||duration===undefined||email===undefined||title===\"\"||description===\"\"||metric===\"\"||minimum===\"\"&&goalType===\"Quantitative\"||duration===\"\"||email===\"\"||goalType==\"\"){alert(\"Please fill in all fields.\");}else{var rg=/\\./g;var temp=email.replace(rg,\",\");if(!emailTouid[temp]){alert(\"The user does not exist. Please try again.\");}else{var _progress;alert(\"Success! New Goal Created!\");var dt=selectedDate.toLocaleString(\"en-US\",{timeZone:\"America/Chicago\"});var myJSON=JSON.stringify(dt);var timeNow=myJSON.split('\"')[1].split(\",\")[0];var myRef=db.child(\"goals\").push();var key=myRef.key;var newData={deleted:false,rejected:false,confirmed:false,archivedCreator:false,archivedInvitee:false,key:key,title:title,description:description,startDate:timeNow,duration:duration,goalType:goalType,groupMembers:{creator:user.uid,invitee:emailTouid[temp]},minimum:goalType===\"Quantitative\"?minimum:\"1\",metric:metric,progress:(_progress={},_defineProperty(_progress,user.uid,{0:0}),_defineProperty(_progress,emailTouid[temp],{0:0}),_progress),lastRemindCreator:-1,lastRemindInvitee:-1};myRef.update(newData);//add goals to creator\ndb.child(\"users\").child(user.uid).child(\"goals\").child(key).set(key);//add goal to invitee\ndb.child(\"users\").child(emailTouid[temp]).child(\"invites\").child(key).set(key);handleClose();}}};var handleDateChange=function handleDateChange(date){setSelectedDate(date);};var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Button,{className:classes.button,variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/React.createElement(AddCircleIcon,{fontSize:\"large\"}),size:\"large\",onClick:handleOpen},\"Add a new goal\"))),/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose},/*#__PURE__*/React.createElement(DialogTitle,null,\"Create a new goal\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TextField,{autoFocus:true,margin:\"dense\",label:\"Goal Title\",fullWidth:true,onChange:function onChange(event){return setTitle(event.target.value);},placeholder:\"What's your goal focus? (e.g. Reading, Meditation, Daily Pushups)\",inputProps:{maxLength:15}}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",label:\"Goal Description\",fullWidth:true,onChange:function onChange(event){return setDescription(event.target.value);},placeholder:\"What will you do every day to reach your goal? Set S.M.A.R.T goals!\"}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",label:\"Goal Metric\",fullWidth:true,onChange:function onChange(event){return setMetric(event.target.value);},placeholder:\"What unit will you measure everyday? (e.g. pushups done, minutes spent)\"}),/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl,style:{width:'100%'}},/*#__PURE__*/React.createElement(InputLabel,{id:\"demo-mutiple-name-label\"},\"Goal Type\"),/*#__PURE__*/React.createElement(Select,{labelId:\"demo-mutiple-name-label\",id:\"demo-mutiple-name\",value:goalType,style:{width:'100%'},onChange:function onChange(event){return setGoalType(event.target.value);},input:/*#__PURE__*/React.createElement(Input,{style:{width:'100%'}}),MenuProps:MenuProps},['Quantitative','Qualitative'].map(function(name){return/*#__PURE__*/React.createElement(MenuItem,{key:name,value:name},name);}))),goalType==='Qualitative'?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",label:\"Daily Minimum\",fullWidth:true,onChange:function onChange(event){return setMinimum(event.target.value);},placeholder:\"How much do you need to do to complete your daily goal? (e.g. 10)\",type:\"number\"}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",label:\"Goal Duration\",fullWidth:true,onChange:function onChange(event){return setDuration(event.target.value);},placeholder:\"How many weeks will you work on your goal?(e.g. 2)\",type:\"number\"}),/*#__PURE__*/React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},/*#__PURE__*/React.createElement(KeyboardDatePicker,{format:\"MM/dd/yyyy\",margin:\"normal\",label:\"Goal Start Date\",value:selectedDate,onChange:handleDateChange,fullWidth:true,KeyboardButtonProps:{\"aria-label\":\"change date\"}})),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",label:\"Invite Your Friend\",fullWidth:true,onChange:function onChange(event){return setEmail(event.target.value);},placeholder:\"Who do you want to work with? Please provide your friend's email address.\"})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:handleSubmit},\"Submit\"))));};export default AddGoal;","map":{"version":3,"sources":["/Users/eddie/Documents/GitHub/quick-travis/src/AddGoal.js"],"names":["React","useState","makeStyles","withStyles","Button","Grid","AddCircleIcon","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DateFnsUtils","InputLabel","MenuItem","FormControl","Select","Input","NativeSelect","InputBase","MuiPickersUtilsProvider","KeyboardDatePicker","firebase","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","db","database","ref","useStyles","button","AddGoal","open","user","setOpen","emailTouid","title","setTitle","description","setDescription","Date","selectedDate","setSelectedDate","metric","setMetric","minimum","setMinimum","duration","setDuration","email","setEmail","goalType","setGoalType","classes","handleOpen","handleClose","handleSubmit","undefined","alert","rg","temp","replace","dt","toLocaleString","timeZone","myJSON","JSON","stringify","timeNow","split","myRef","child","push","key","newData","deleted","rejected","confirmed","archivedCreator","archivedInvitee","startDate","groupMembers","creator","uid","invitee","progress","lastRemindCreator","lastRemindInvitee","update","set","handleDateChange","date","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","event","target","value","maxLength","formControl","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n  import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport firebase from \"./shared/firebase\";\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst db = firebase.database().ref();\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: 5,\n  },\n}));\n\nconst AddGoal = ({ open, user, setOpen, emailTouid }) => {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [metric, setMetric] = useState();\n  const [minimum, setMinimum] = useState();\n  const [duration, setDuration] = useState();\n  const [email, setEmail] = useState();\n  const [goalType, setGoalType] = useState(\"\");\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle();\n    setSelectedDate(new Date());\n    setMetric();\n    setMinimum();\n    setDuration();\n    setGoalType('');\n    setEmail();\n  };\n\n  const handleSubmit = () => {\n    //console.log(title);\n    //console.log(description);\n    //console.log(metric);\n    //console.log(minimum);\n    //console.log(duration);\n    if (\n      title === undefined ||\n      description === undefined ||\n      metric === undefined ||\n      (minimum === undefined && goalType === \"Quantitative\") ||\n      duration === undefined ||\n      email === undefined ||\n      title === \"\" ||\n      description === \"\" ||\n      metric === \"\" ||\n      (minimum === \"\" && goalType === \"Quantitative\") ||\n      duration === \"\" ||\n      email === \"\" || \n      goalType == \"\"\n    ) {\n      alert(\"Please fill in all fields.\");\n    } else {\n      \n      let rg = /\\./g;\n      let temp = email.replace(rg, \",\");\n      if (!emailTouid[temp]) {\n        alert(\"The user does not exist. Please try again.\");\n      } else {\n        alert(\"Success! New Goal Created!\");\n        var dt = selectedDate.toLocaleString(\"en-US\", {\n          timeZone: \"America/Chicago\",\n        });\n        var myJSON = JSON.stringify(dt);\n        var timeNow = myJSON.split('\"')[1].split(\",\")[0];\n        var myRef = db.child(\"goals\").push();\n        var key = myRef.key;\n\n        var newData = {\n          deleted: false,\n          rejected: false, \n          confirmed: false,\n          archivedCreator: false, \n          archivedInvitee: false, \n          key: key,\n          title: title,\n          description: description,\n          startDate: timeNow,\n          duration: duration,\n          goalType: goalType,\n          groupMembers: {\n            creator: user.uid,\n            invitee: emailTouid[temp],\n          },\n          minimum: goalType === \"Quantitative\" ? minimum : \"1\",\n          metric: metric,\n          progress: {\n            [user.uid]: {\n              0: 0,\n            },\n            [emailTouid[temp]]: {\n              0: 0,\n            },\n          },\n          lastRemindCreator: -1,\n          lastRemindInvitee: -1,\n        };\n\n        myRef.update(newData);\n\n        //add goals to creator\n        db.child(\"users\").child(user.uid).child(\"goals\").child(key).set(key);\n\n        //add goal to invitee\n        db.child(\"users\").child(emailTouid[temp]).child(\"invites\").child(key).set(key);\n        \n        handleClose();\n      }\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddCircleIcon fontSize=\"large\" />}\n            size=\"large\"\n            onClick={handleOpen}\n          >\n            Add a new goal\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Create a new goal</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Goal Title\"\n            fullWidth\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"What's your goal focus? (e.g. Reading, Meditation, Daily Pushups)\"\n            inputProps={{maxLength: 15}}\n          />\n          {/* Goal Description Added to SeeMore? */}\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Description\"\n            fullWidth\n            onChange={(event) => setDescription(event.target.value)}\n            placeholder=\"What will you do every day to reach your goal? Set S.M.A.R.T goals!\"\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Metric\"\n            fullWidth\n            onChange={(event) => setMetric(event.target.value)}\n            placeholder=\"What unit will you measure everyday? (e.g. pushups done, minutes spent)\"\n          />\n          <FormControl className={classes.formControl} style={{width:'100%'}}>\n            <InputLabel id=\"demo-mutiple-name-label\">Goal Type</InputLabel>\n            <Select \n\n              labelId=\"demo-mutiple-name-label\"\n              id=\"demo-mutiple-name\"\n              value={goalType}\n              style={{width:'100%'}}\n              onChange={(event) => setGoalType(event.target.value)}\n              input={<Input style={{width:'100%'}}/>}\n              MenuProps={MenuProps}\n            >\n              {['Quantitative', 'Qualitative'].map(name => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          { goalType === 'Qualitative' ? <React.Fragment></React.Fragment> :\n          <TextField\n            margin=\"dense\"\n            label=\"Daily Minimum\"\n            fullWidth\n            onChange={(event) => setMinimum(event.target.value)}\n            placeholder=\"How much do you need to do to complete your daily goal? (e.g. 10)\"\n            type=\"number\"\n          /> }\n          <TextField\n            margin=\"dense\"\n            label=\"Goal Duration\"\n            fullWidth\n            onChange={(event) => setDuration(event.target.value)}\n            placeholder=\"How many weeks will you work on your goal?(e.g. 2)\"\n            type=\"number\"\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              label=\"Goal Start Date\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              fullWidth\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <TextField\n            margin=\"dense\"\n            label=\"Invite Your Friend\"\n            fullWidth\n            onChange={(event) => setEmail(event.target.value)}\n            placeholder=\"Who do you want to work with? Please provide your friend's email address.\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AddGoal;"]},"metadata":{},"sourceType":"module"}